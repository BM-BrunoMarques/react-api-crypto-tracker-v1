[{"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js":"1","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js":"2","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js":"3","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js":"4","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js":"5","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js":"6","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx":"7","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx":"8","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx":"9","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx":"10","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js":"11","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js":"12","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js":"13","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx":"14","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx":"15","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx":"16","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js":"17","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinDataTable.jsx":"18"},{"size":2614,"mtime":1613782709770,"results":"19","hashOfConfig":"20"},{"size":3018,"mtime":1613532711379,"results":"21","hashOfConfig":"20"},{"size":53,"mtime":1612069310891,"results":"22","hashOfConfig":"20"},{"size":218,"mtime":1612069310889,"results":"23","hashOfConfig":"20"},{"size":1677,"mtime":1613279570329,"results":"24","hashOfConfig":"20"},{"size":776,"mtime":1612760567320,"results":"25","hashOfConfig":"20"},{"size":296,"mtime":1613771445033,"results":"26","hashOfConfig":"20"},{"size":559,"mtime":1612987998476,"results":"27","hashOfConfig":"20"},{"size":781,"mtime":1613277189129,"results":"28","hashOfConfig":"20"},{"size":4551,"mtime":1613530729590,"results":"29","hashOfConfig":"20"},{"size":1029,"mtime":1613882177093,"results":"30","hashOfConfig":"20"},{"size":2501,"mtime":1613280329088,"results":"31","hashOfConfig":"20"},{"size":2808,"mtime":1613871505302,"results":"32","hashOfConfig":"20"},{"size":5445,"mtime":1613886530972,"results":"33","hashOfConfig":"20"},{"size":4794,"mtime":1613884942184,"results":"34","hashOfConfig":"20"},{"size":1404,"mtime":1613802796076,"results":"35","hashOfConfig":"20"},{"size":175,"mtime":1613781353858,"results":"36","hashOfConfig":"20"},{"size":2582,"mtime":1613888440899,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"phcpdk",{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js",["81","82"],"import \"../App.css\";\r\nimport React, { useState, useRef, createContext, useEffect } from \"react\";\r\n\r\nimport Coin from \"./Coin/Coin\";\r\nimport CoinsHomeListing from \"./CoinsHomeListing\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Layout, Row, Col } from \"antd\";\r\nconst { Header, Content, Footer } = Layout;\r\nexport const stateCoinsContext = createContext();\r\n\r\nfunction App() {\r\n  const scrollParentRef = useRef(null);\r\n\r\n  const [stateValues, setStateValues] = useState({\r\n    coins: [],\r\n    page: 1,\r\n    isLoading: false,\r\n  });\r\n\r\n  const [isLoading, setLoading] = useState({\r\n    load: false,\r\n    tip: \"\",\r\n  });\r\n\r\n  // const [page, setPage] = useState(1);\r\n\r\n  const [selectedCoin, setSelectedCoin] = useState(\"\");\r\n  const [moreItems, setMoreItems] = useState(true);\r\n  const [numOfPages, setnumOfPages] = useState();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [scrollPosition, setScrollPosition] = useState(\"\");\r\n\r\n  const coinsStoreContext = {\r\n    selectedCoinC: [selectedCoin, setSelectedCoin],\r\n    moreItemsC: [moreItems, setMoreItems],\r\n    numOfPagesC: [numOfPages, setnumOfPages],\r\n    stateCoinsC: [stateValues, setStateValues],\r\n    isLoadingC: [isLoading, setLoading],\r\n    searchTextC: [searchText, setSearchText],\r\n    scrollPositionC: [scrollPosition, setScrollPosition],\r\n    scrollParentRefC: scrollParentRef,\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ height: \"100%\" }}>\r\n      <stateCoinsContext.Provider value={coinsStoreContext}>\r\n        <BrowserRouter>\r\n          <Header>\r\n            <Row style={{ width: \"100%\" }} align=\"middle\" justify=\"end\">\r\n              <Col xs={{ span: 10, offset: 9 }} xl={{ span: 5, offset: 18 }}>\r\n                <SearchBar\r\n                  selectedCoin={selectedCoin}\r\n                  setSelectedCoin={setSelectedCoin}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Header>\r\n          <Content>\r\n            <Row style={{ height: \"100%\" }} align=\"middle\">\r\n              <Col\r\n                xs={{ span: 24, offset: 0 }}\r\n                sm={{ span: 18, offset: 3 }}\r\n                xl={{ span: 18, offset: 3 }}\r\n                xxl={{ span: 15, offset: 5 }}\r\n                style={{ height: \"100%\", maxHeight: \"70vh\" }}\r\n              >\r\n                <Route path=\"/\" component={CoinsHomeListing} />\r\n                <Route path=\"/coin\" component={Coin} />\r\n              </Col>\r\n            </Row>\r\n          </Content>\r\n        </BrowserRouter>\r\n      </stateCoinsContext.Provider>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["83","84"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js",["85","86","87"],"import { logDOM } from \"@testing-library/react\";\r\nimport { params } from \"./params.js\";\r\nimport { formatPrice } from \"../utils/helpers\";\r\n\r\n// export function servicePing() {\r\n//   return fetch(\"https://api.coingecko.com/api/v3/ping\")\r\n//     .then((response) => response.json())\r\n//     .then((data) => console.log(data));\r\n// }\r\n\r\n// let allCoins = async () => {\r\n//   return fetch(\"https://api.coingecko.com/api/v3/coins/list\")\r\n//     .then((response) => response.json())\r\n//     .then((data) => data.length);\r\n// };\r\n\r\nexport async function getCoins(pageNum) {\r\n  const coinReq = await fetch(`\r\n  https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${pageNum}&sparkline=true&price_change_percentage=1h,24h,7d`);\r\n  return coinReq.json();\r\n}\r\n\r\nexport async function getSelectedCoin(coin) {\r\n  const coinReq = await fetch(`\r\n  https://api.coingecko.com/api/v3/coins/${coin}/market_chart?vs_currency=usd&days=max&interval=daily`);\r\n\r\n  const coinRes = await coinReq.json();\r\n  const coinList = coinRes.prices.map((data) => {\r\n    const dateConverted = new Date(data[0]);\r\n    const month = dateConverted.getMonth() + 1;\r\n    const day = dateConverted.getDate();\r\n    const year = dateConverted.getFullYear();\r\n\r\n    const price = data[1];\r\n\r\n    return { date: `${month}-${day}-${year}`, price: price };\r\n  });\r\n\r\n  return coinList;\r\n}\r\n\r\nexport async function getSelectedCoinData(coin) {\r\n  const coinReq = await fetch(`https://api.coingecko.com/api/v3/coins/${coin}`)\r\n  return await coinReq.json()\r\n}\r\n\r\nexport async function getAllCoinsList() {\r\n  const coinReq = await fetch(\r\n    \"https://api.coingecko.com/api/v3/coins/list?include_platform=false\"\r\n  );\r\n  const coinRes = await coinReq.json();\r\n\r\n  const coinList = coinRes.map(({ name, id }) => {\r\n    const coin = { value: id, label: name };\r\n    return coin;\r\n  });\r\n\r\n  return coinList;\r\n}\r\n\r\n// .then(({ name, id }) => {\r\n//   test.push({ name, id });\r\n//   console.log(\"here : \", test);\r\n//   // return test.push({name, id})\r\n// });\r\n// .then((response) => {\r\n//   // return response\r\n//   let searchCoins = [];\r\n//   response.map((coin) => {\r\n//     searchCoins.push({ coin });\r\n//   });\r\n//   return searchCoins;\r\n// });\r\n// }\r\n\r\n// export const getFirstCoins = () => {\r\n//   return firstFetch().then((result) => result);\r\n// }\r\n\r\n// export function getAllCoins() {\r\n//   allCoins().then((numOfCoins) => {\r\n//     console.log(numOfCoins.length)\r\n//     let numOfFetch = Math.ceil(numOfCoins / params.maxApiListCalls)\r\n//     console.log(numOfFetch)\r\n//     for (let i = 0; i < numOfFetch; i++)\r\n//     {\r\n//       let fetchPage = i + 1;\r\n//       fetch(\r\n//         `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${fetchPage}&sparkline=false&price_change_percentage=1h%2C24h%2C7d`\r\n//       )\r\n//       .then((response) => response.json())\r\n//       .then((data) => console.log('allcoins: ',data));\r\n//     }\r\n//     return\r\n//   });\r\n// }\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js",["88","89"],"import \"../App.css\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { getAllCoinsList } from \"../utils/api\";\r\nimport { AutoComplete } from \"antd\";\r\nimport { Sorter } from \"./AutoComplete/Sorter\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { stateCoinsContext } from \"./App\";\r\n\r\nexport default function SearchBar(props) {\r\n  //useContext\r\n  const { selectedCoinC, isLoadingC, searchTextC } = useContext(\r\n    stateCoinsContext\r\n  );\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [searchText, setSearchText] = searchTextC;\r\n  //useState\r\n  const [searchCoins, setCoins] = useState([]);\r\n  const [searchOptions, setOptions] = useState([]);\r\n  const history = useHistory();\r\n\r\n  //Hooks\r\n  useEffect(() => {\r\n    getAllCoinsList().then((coins) => {\r\n      setCoins(coins);\r\n    });\r\n  }, []);\r\n\r\n  const onSelect = (data) => {\r\n    setSelectedCoin(data);\r\n    history.push({\r\n      pathname: \"/coin/\" + data,\r\n    });\r\n    setSearchText('');\r\n  };\r\n\r\n  const onSearch = (searchText) => {\r\n    setSearchText(searchText);\r\n    const filteredOptions = Sorter(searchCoins, searchText);\r\n    setOptions(filteredOptions);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {searchCoins && (\r\n        <div>\r\n          <AutoComplete\r\n            placeholder='Looking for a specific coin?'\r\n            value={searchText}\r\n            options={searchOptions || []}\r\n            onSelect={onSelect}\r\n            onSearch={onSearch}\r\n            backfill={true}\r\n            disabled={isLoading}\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js",[],["90","91"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx",["92","93"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Table, Avatar } from \"antd\";\r\nimport { TinyLine } from \"@ant-design/charts\";\r\nimport { stateCoinsContext } from \"../App\";\r\nimport { formatPrice, formatPercentage } from \"../../utils/helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./TableScroll.css\";\r\n\r\nexport default function TableScroll() {\r\n  const { stateCoinsC, isLoadingC } = useContext(stateCoinsContext);\r\n  const [stateValues] = stateCoinsC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setLoading({\r\n      load: false,\r\n    });\r\n  }, []);\r\n\r\n  const config = {\r\n    height: 60,\r\n    width: 80,\r\n    autoFit: false,\r\n    smooth: false,\r\n    passive: false,\r\n\r\n    lineStyle: {\r\n      stroke: \"blue\",\r\n      lineWidth: 1,\r\n      lineDash: [1, 1],\r\n      strokeOpacity: 0.7,\r\n      shadowColor: \"black\",\r\n      shadowBlur: 10,\r\n      shadowOffsetX: 5,\r\n      shadowOffsetY: 5,\r\n    },\r\n    tooltip: {\r\n      formatter: (data) => {\r\n        return data.y;\r\n      },\r\n    },\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Coin\",\r\n      dataIndex: [\"image\", \"name\"],\r\n      key: \"coin\",\r\n      fixed: \"left\",\r\n      width: 80,\r\n      align: \"center\",\r\n      render: (empty, record) => {\r\n        return {\r\n          children: (\r\n            <div style={{ display: \"flex\" }}>\r\n              <Avatar size=\"normal\" src={record.image} />\r\n              <span className=\"title\">{record.name}</span>\r\n              <div\r\n                style={{ position: \" absolute\", top: \"-35px\" }}\r\n                id={record.id}\r\n              ></div>\r\n            </div>\r\n          ),\r\n        };\r\n      },\r\n    },\r\n    {\r\n      dataIndex: \"symbol\",\r\n      key: \"symbol\",\r\n      width: 20,\r\n      align: \"center\",\r\n      render: (data) => {\r\n        return {\r\n          children: <span className=\"symbol\">{data.toUpperCase()}</span>,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"current_price\",\r\n      key: \"current_price\",\r\n      width: 80,\r\n      align: \"center\",\r\n      render: (price) => {\r\n        return {\r\n          children: <span>{formatPrice(price)}</span>,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: \"1h\",\r\n      dataIndex: \"price_change_percentage_1h_in_currency\",\r\n      key: \"price_change_percentage_1h_in_currency\",\r\n      width: 30,\r\n      align: \"center\",\r\n      render: (percent) => (\r\n        <span className={`percent ${percent > 0 ? \"positive\" : \"negative\"}`}>\r\n          {formatPercentage(percent)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"24h\",\r\n      dataIndex: \"price_change_percentage_24h_in_currency\",\r\n      key: \"price_change_percentage_24h_in_currency\",\r\n      width: 30,\r\n      align: \"center\",\r\n      render: (percent) => (\r\n        <span className={`percent ${percent > 0 ? \"positive\" : \"negative\"}`}>\r\n          {formatPercentage(percent)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"7d\",\r\n      dataIndex: \"price_change_percentage_7d_in_currency\",\r\n      key: \"price_change_percentage_7d_in_currency\",\r\n      width: 30,\r\n      align: \"center\",\r\n      render: (percent) => (\r\n        <span className={`percent ${percent > 0 ? \"positive\" : \"negative\"}`}>\r\n          {formatPercentage(percent)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Last 7 Days\",\r\n      dataIndex: \"sparkline_in_7d\",\r\n      key: \"sparkline_in_7d\",\r\n      align: \"center\",\r\n      width: 100,\r\n      height: 60,\r\n      render: ({ price }) => {\r\n        // const dataMod = price.map((price) => price.toFixed(4));\r\n        // <MiniChart dataSet={price}/>\r\n        return <TinyLine data={price} {...config} />;\r\n        // const sparklinePrices = sparkline.price.map((price, indx) => ({\r\n        //   day: Math.round(indx * 100 / sparkline.price.length),\r\n        //   value: Math.ceil(price),\r\n        // }));\r\n        // return <Line data={sparklinePrices} {...config} />;\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Table\r\n      onRow={(record) => {\r\n        return {\r\n          onClick: () => {\r\n            setLoading({\r\n              load: true,\r\n              tip: `Loading Coin!`,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(`/coin/${record.id}`);\r\n            }, 10);\r\n          }, // click row\r\n        };\r\n      }}\r\n      pagination={false}\r\n      columns={columns}\r\n      dataSource={stateValues.coins}\r\n      rowKey={(record, indx) => `${record.id}${indx}`}\r\n      sticky={true}\r\n      scroll={{ x: \"max-content\" }}\r\n    />\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js",["94"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js",["95","96","97","98","99"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx",["100","101","102"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx",["103","104","105","106","107","108"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx",["109","110"],"import \"../../App.css\";\r\nimport \"./Coin.css\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { stateCoinsContext } from \"../App\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { getSelectedCoin } from \"../../utils/api\";\r\nimport { formatPrice } from \"../../utils/helpers\";\r\n\r\nexport default function CoinChart(props) {\r\n  const { selectedCoinC } = useContext(stateCoinsContext);\r\n\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [coinChartData, setChartData] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    if (selectedCoin) {\r\n      const coinChartInfo = await getSelectedCoin(selectedCoin);\r\n      setChartData(coinChartInfo);\r\n    }\r\n  }, [selectedCoin]);\r\n\r\n  const config = {\r\n    renderer: \"canvas\",\r\n    autoFit: true,\r\n    xField: \"date\",\r\n    yField: \"price\",\r\n    label: false,\r\n    tooltip: { showMarkers: false },\r\n    lineStyle: {\r\n      stroke: \"orange\",\r\n      lineWidth: 1,\r\n      lineDash: [1, 1],\r\n      strokeOpacity: 1,\r\n      shadowColor: \"black\",\r\n      shadowBlur: 10,\r\n      shadowOffsetX: 5,\r\n      shadowOffsetY: 5,\r\n    },\r\n    meta: {\r\n      price: {\r\n        formatter: (price) => {\r\n          return formatPrice(price);\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Line\r\n      data={coinChartData}\r\n      {...config}\r\n      style={{ padding: \"15px 0\", maxHeight: '300px', marginTop: '20px' }}\r\n    />\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinDataTable.jsx",["111","112"],{"ruleId":"113","severity":1,"message":"114","line":2,"column":50,"nodeType":"115","messageId":"116","endLine":2,"endColumn":59},{"ruleId":"113","severity":1,"message":"117","line":10,"column":26,"nodeType":"115","messageId":"116","endLine":10,"endColumn":32},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"113","severity":1,"message":"122","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":16},{"ruleId":"113","severity":1,"message":"123","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":16},{"ruleId":"113","severity":1,"message":"124","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":21},{"ruleId":"113","severity":1,"message":"125","line":14,"column":10,"nodeType":"115","messageId":"116","endLine":14,"endColumn":22},{"ruleId":"113","severity":1,"message":"126","line":15,"column":21,"nodeType":"115","messageId":"116","endLine":15,"endColumn":31},{"ruleId":"118","replacedBy":"127"},{"ruleId":"120","replacedBy":"128"},{"ruleId":"113","severity":1,"message":"129","line":13,"column":10,"nodeType":"115","messageId":"116","endLine":13,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":20,"column":6,"nodeType":"132","endLine":20,"endColumn":8,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":38,"column":6,"nodeType":"132","endLine":38,"endColumn":8,"suggestions":"135"},{"ruleId":"113","severity":1,"message":"136","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":22},{"ruleId":"113","severity":1,"message":"137","line":27,"column":26,"nodeType":"115","messageId":"116","endLine":27,"endColumn":43},{"ruleId":"113","severity":1,"message":"138","line":29,"column":9,"nodeType":"115","messageId":"116","endLine":29,"endColumn":12},{"ruleId":"130","severity":1,"message":"139","line":38,"column":6,"nodeType":"132","endLine":38,"endColumn":8,"suggestions":"140"},{"ruleId":"130","severity":1,"message":"141","line":45,"column":6,"nodeType":"132","endLine":45,"endColumn":20,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":49,"column":9,"nodeType":"145","messageId":"146","endLine":49,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":145,"column":33,"nodeType":"149","messageId":"150","endLine":145,"endColumn":40},{"ruleId":"147","severity":1,"message":"148","line":158,"column":33,"nodeType":"149","messageId":"150","endLine":158,"endColumn":40},{"ruleId":"113","severity":1,"message":"151","line":3,"column":50,"nodeType":"115","messageId":"116","endLine":3,"endColumn":56},{"ruleId":"113","severity":1,"message":"152","line":24,"column":10,"nodeType":"115","messageId":"116","endLine":24,"endColumn":20},{"ruleId":"113","severity":1,"message":"153","line":25,"column":10,"nodeType":"115","messageId":"116","endLine":25,"endColumn":24},{"ruleId":"113","severity":1,"message":"154","line":27,"column":22,"nodeType":"115","messageId":"116","endLine":27,"endColumn":35},{"ruleId":"130","severity":1,"message":"155","line":35,"column":16,"nodeType":"156","endLine":35,"endColumn":56},{"ruleId":"130","severity":1,"message":"157","line":50,"column":13,"nodeType":"158","endLine":55,"endColumn":4},{"ruleId":"113","severity":1,"message":"159","line":12,"column":24,"nodeType":"115","messageId":"116","endLine":12,"endColumn":39},{"ruleId":"130","severity":1,"message":"157","line":15,"column":13,"nodeType":"158","endLine":20,"endColumn":4},{"ruleId":"160","severity":1,"message":"161","line":12,"column":3,"nodeType":"162","messageId":"163","endLine":25,"endColumn":4},{"ruleId":"113","severity":1,"message":"164","line":28,"column":9,"nodeType":"115","messageId":"116","endLine":28,"endColumn":20},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Footer' is assigned a value but never used.","no-native-reassign",["165"],"no-negated-in-lhs",["166"],"'logDOM' is defined but never used.","'params' is defined but never used.","'formatPrice' is defined but never used.","'selectedCoin' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["165"],["166"],"'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has missing dependencies: 'numOfPages', 'selectedCoin', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["168"],"'CurrencyCard' is defined but never used.","'setScrollPosition' is assigned a value but never used.","'tip' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'numOfPages', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["169"],"React Hook useEffect has missing dependencies: 'scrollPosition' and 'setLoading'. Either include them or remove the dependency array.",["170"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useRef' is defined but never used.","'searchText' is assigned a value but never used.","'scrollPosition' is assigned a value but never used.","'setTagsHeight' is assigned a value but never used.","Assignments to the 'urlSlice' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'setSelectedCoin' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'typePercent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [setLoading]",{"range":"179","text":"180"},"Update the dependencies array to be: [numOfPages, selectedCoin, setLoading, setnumOfPages]",{"range":"181","text":"182"},"Update the dependencies array to be: [numOfPages, setLoading, setnumOfPages]",{"range":"183","text":"184"},"Update the dependencies array to be: [scrollPosition, selectedCoin, setLoading]",{"range":"185","text":"186"},[642,644],"[setLoading]",[1168,1170],"[numOfPages, selectedCoin, setLoading, setnumOfPages]",[1240,1242],"[numOfPages, setLoading, setnumOfPages]",[1399,1413],"[scrollPosition, selectedCoin, setLoading]"]