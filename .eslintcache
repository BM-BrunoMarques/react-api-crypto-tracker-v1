[{"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js":"1","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js":"2","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js":"3","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js":"4","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js":"5","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js":"6","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx":"7","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx":"8","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx":"9","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx":"10","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js":"11","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js":"12","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js":"13","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx":"14","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx":"15","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx":"16","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js":"17"},{"size":2567,"mtime":1613680129660,"results":"18","hashOfConfig":"19"},{"size":3018,"mtime":1613532711379,"results":"20","hashOfConfig":"19"},{"size":53,"mtime":1612069310891,"results":"21","hashOfConfig":"19"},{"size":218,"mtime":1612069310889,"results":"22","hashOfConfig":"19"},{"size":1677,"mtime":1613279570329,"results":"23","hashOfConfig":"19"},{"size":776,"mtime":1612760567320,"results":"24","hashOfConfig":"19"},{"size":275,"mtime":1613280155627,"results":"25","hashOfConfig":"19"},{"size":559,"mtime":1612987998476,"results":"26","hashOfConfig":"19"},{"size":781,"mtime":1613277189129,"results":"27","hashOfConfig":"19"},{"size":4551,"mtime":1613530729590,"results":"28","hashOfConfig":"19"},{"size":681,"mtime":1613506962285,"results":"29","hashOfConfig":"19"},{"size":2501,"mtime":1613280329088,"results":"30","hashOfConfig":"19"},{"size":2808,"mtime":1613693293741,"results":"31","hashOfConfig":"19"},{"size":6067,"mtime":1613716311422,"results":"32","hashOfConfig":"19"},{"size":5989,"mtime":1613695078064,"results":"33","hashOfConfig":"19"},{"size":1388,"mtime":1613609749590,"results":"34","hashOfConfig":"19"},{"size":149,"mtime":1613679185200,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"phcpdk",{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js",["76","77"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js",["78","79","80"],"import { logDOM } from \"@testing-library/react\";\r\nimport { params } from \"./params.js\";\r\nimport { formatPrice } from \"../utils/helpers\";\r\n\r\n// export function servicePing() {\r\n//   return fetch(\"https://api.coingecko.com/api/v3/ping\")\r\n//     .then((response) => response.json())\r\n//     .then((data) => console.log(data));\r\n// }\r\n\r\n// let allCoins = async () => {\r\n//   return fetch(\"https://api.coingecko.com/api/v3/coins/list\")\r\n//     .then((response) => response.json())\r\n//     .then((data) => data.length);\r\n// };\r\n\r\nexport async function getCoins(pageNum) {\r\n  const coinReq = await fetch(`\r\n  https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${pageNum}&sparkline=true&price_change_percentage=1h,24h,7d`);\r\n  return coinReq.json();\r\n}\r\n\r\nexport async function getSelectedCoin(coin) {\r\n  const coinReq = await fetch(`\r\n  https://api.coingecko.com/api/v3/coins/${coin}/market_chart?vs_currency=usd&days=max&interval=daily`);\r\n\r\n  const coinRes = await coinReq.json();\r\n  const coinList = coinRes.prices.map((data) => {\r\n    const dateConverted = new Date(data[0]);\r\n    const month = dateConverted.getMonth() + 1;\r\n    const day = dateConverted.getDate();\r\n    const year = dateConverted.getFullYear();\r\n\r\n    const price = data[1];\r\n\r\n    return { date: `${month}-${day}-${year}`, price: price };\r\n  });\r\n\r\n  return coinList;\r\n}\r\n\r\nexport async function getSelectedCoinData(coin) {\r\n  const coinReq = await fetch(`https://api.coingecko.com/api/v3/coins/${coin}`)\r\n  return await coinReq.json()\r\n}\r\n\r\nexport async function getAllCoinsList() {\r\n  const coinReq = await fetch(\r\n    \"https://api.coingecko.com/api/v3/coins/list?include_platform=false\"\r\n  );\r\n  const coinRes = await coinReq.json();\r\n\r\n  const coinList = coinRes.map(({ name, id }) => {\r\n    const coin = { value: id, label: name };\r\n    return coin;\r\n  });\r\n\r\n  return coinList;\r\n}\r\n\r\n// .then(({ name, id }) => {\r\n//   test.push({ name, id });\r\n//   console.log(\"here : \", test);\r\n//   // return test.push({name, id})\r\n// });\r\n// .then((response) => {\r\n//   // return response\r\n//   let searchCoins = [];\r\n//   response.map((coin) => {\r\n//     searchCoins.push({ coin });\r\n//   });\r\n//   return searchCoins;\r\n// });\r\n// }\r\n\r\n// export const getFirstCoins = () => {\r\n//   return firstFetch().then((result) => result);\r\n// }\r\n\r\n// export function getAllCoins() {\r\n//   allCoins().then((numOfCoins) => {\r\n//     console.log(numOfCoins.length)\r\n//     let numOfFetch = Math.ceil(numOfCoins / params.maxApiListCalls)\r\n//     console.log(numOfFetch)\r\n//     for (let i = 0; i < numOfFetch; i++)\r\n//     {\r\n//       let fetchPage = i + 1;\r\n//       fetch(\r\n//         `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${fetchPage}&sparkline=false&price_change_percentage=1h%2C24h%2C7d`\r\n//       )\r\n//       .then((response) => response.json())\r\n//       .then((data) => console.log('allcoins: ',data));\r\n//     }\r\n//     return\r\n//   });\r\n// }\r\n",["81","82"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js",["83","84"],"import \"../App.css\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { getAllCoinsList } from \"../utils/api\";\r\nimport { AutoComplete } from \"antd\";\r\nimport { Sorter } from \"./AutoComplete/Sorter\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { stateCoinsContext } from \"./App\";\r\n\r\nexport default function SearchBar(props) {\r\n  //useContext\r\n  const { selectedCoinC, isLoadingC, searchTextC } = useContext(\r\n    stateCoinsContext\r\n  );\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [searchText, setSearchText] = searchTextC;\r\n  //useState\r\n  const [searchCoins, setCoins] = useState([]);\r\n  const [searchOptions, setOptions] = useState([]);\r\n  const history = useHistory();\r\n\r\n  //Hooks\r\n  useEffect(() => {\r\n    getAllCoinsList().then((coins) => {\r\n      setCoins(coins);\r\n    });\r\n  }, []);\r\n\r\n  const onSelect = (data) => {\r\n    setSelectedCoin(data);\r\n    history.push({\r\n      pathname: \"/coin/\" + data,\r\n    });\r\n    setSearchText('');\r\n  };\r\n\r\n  const onSearch = (searchText) => {\r\n    setSearchText(searchText);\r\n    const filteredOptions = Sorter(searchCoins, searchText);\r\n    setOptions(filteredOptions);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {searchCoins && (\r\n        <div>\r\n          <AutoComplete\r\n            placeholder='Looking for a specific coin?'\r\n            value={searchText}\r\n            options={searchOptions || []}\r\n            onSelect={onSelect}\r\n            onSearch={onSearch}\r\n            backfill={true}\r\n            disabled={isLoading}\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js",[],["85","86"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx",["87","88"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Table, Avatar } from \"antd\";\r\nimport { TinyLine } from \"@ant-design/charts\";\r\nimport { stateCoinsContext } from \"../App\";\r\nimport { formatPrice, formatPercentage } from \"../../utils/helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./TableScroll.css\";\r\n\r\nexport default function TableScroll() {\r\n  const { stateCoinsC, isLoadingC } = useContext(stateCoinsContext);\r\n  const [stateValues] = stateCoinsC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setLoading({\r\n      load: false,\r\n    });\r\n  }, []);\r\n\r\n  const config = {\r\n    height: 60,\r\n    width: 80,\r\n    autoFit: false,\r\n    smooth: false,\r\n    passive: false,\r\n\r\n    lineStyle: {\r\n      stroke: \"blue\",\r\n      lineWidth: 1,\r\n      lineDash: [1, 1],\r\n      strokeOpacity: 0.7,\r\n      shadowColor: \"black\",\r\n      shadowBlur: 10,\r\n      shadowOffsetX: 5,\r\n      shadowOffsetY: 5,\r\n    },\r\n    tooltip: {\r\n      formatter: (data) => {\r\n        return data.y;\r\n      },\r\n    },\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Coin\",\r\n      dataIndex: [\"image\", \"name\"],\r\n      key: \"coin\",\r\n      fixed: \"left\",\r\n      width: 80,\r\n      align: \"center\",\r\n      render: (empty, record) => {\r\n        return {\r\n          children: (\r\n            <div style={{ display: \"flex\" }}>\r\n              <Avatar size=\"normal\" src={record.image} />\r\n              <span className=\"title\">{record.name}</span>\r\n              <div\r\n                style={{ position: \" absolute\", top: \"-35px\" }}\r\n                id={record.id}\r\n              ></div>\r\n            </div>\r\n          ),\r\n        };\r\n      },\r\n    },\r\n    {\r\n      dataIndex: \"symbol\",\r\n      key: \"symbol\",\r\n      width: 20,\r\n      align: \"center\",\r\n      render: (data) => {\r\n        return {\r\n          children: <span className=\"symbol\">{data.toUpperCase()}</span>,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"current_price\",\r\n      key: \"current_price\",\r\n      width: 80,\r\n      align: \"center\",\r\n      render: (price) => {\r\n        return {\r\n          children: <span>{formatPrice(price)}</span>,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: \"1h\",\r\n      dataIndex: \"price_change_percentage_1h_in_currency\",\r\n      key: \"price_change_percentage_1h_in_currency\",\r\n      width: 30,\r\n      align: \"center\",\r\n      render: (percent) => (\r\n        <span className={`percent ${percent > 0 ? \"positive\" : \"negative\"}`}>\r\n          {formatPercentage(percent)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"24h\",\r\n      dataIndex: \"price_change_percentage_24h_in_currency\",\r\n      key: \"price_change_percentage_24h_in_currency\",\r\n      width: 30,\r\n      align: \"center\",\r\n      render: (percent) => (\r\n        <span className={`percent ${percent > 0 ? \"positive\" : \"negative\"}`}>\r\n          {formatPercentage(percent)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"7d\",\r\n      dataIndex: \"price_change_percentage_7d_in_currency\",\r\n      key: \"price_change_percentage_7d_in_currency\",\r\n      width: 30,\r\n      align: \"center\",\r\n      render: (percent) => (\r\n        <span className={`percent ${percent > 0 ? \"positive\" : \"negative\"}`}>\r\n          {formatPercentage(percent)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Last 7 Days\",\r\n      dataIndex: \"sparkline_in_7d\",\r\n      key: \"sparkline_in_7d\",\r\n      align: \"center\",\r\n      width: 100,\r\n      height: 60,\r\n      render: ({ price }) => {\r\n        // const dataMod = price.map((price) => price.toFixed(4));\r\n        // <MiniChart dataSet={price}/>\r\n        return <TinyLine data={price} {...config} />;\r\n        // const sparklinePrices = sparkline.price.map((price, indx) => ({\r\n        //   day: Math.round(indx * 100 / sparkline.price.length),\r\n        //   value: Math.ceil(price),\r\n        // }));\r\n        // return <Line data={sparklinePrices} {...config} />;\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Table\r\n      onRow={(record) => {\r\n        return {\r\n          onClick: () => {\r\n            setLoading({\r\n              load: true,\r\n              tip: `Loading Coin!`,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(`/coin/${record.id}`);\r\n            }, 10);\r\n          }, // click row\r\n        };\r\n      }}\r\n      pagination={false}\r\n      columns={columns}\r\n      dataSource={stateValues.coins}\r\n      rowKey={(record, indx) => `${record.id}${indx}`}\r\n      sticky={true}\r\n      scroll={{ x: \"max-content\" }}\r\n    />\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js",["89"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js",["90","91","92","93","94"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx",["95","96","97","98","99","100"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx",["101","102","103","104","105"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx",["106","107"],"import \"../../App.css\";\r\nimport \"./Coin.css\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { stateCoinsContext } from \"../App\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { getSelectedCoin } from \"../../utils/api\";\r\nimport { formatPrice } from \"../../utils/helpers\";\r\n\r\nexport default function CoinChart(props) {\r\n  const { selectedCoinC } = useContext(stateCoinsContext);\r\n\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [coinChartData, setChartData] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    if (selectedCoin) {\r\n      const coinChartInfo = await getSelectedCoin(selectedCoin);\r\n      setChartData(coinChartInfo);\r\n    }\r\n  }, [selectedCoin]);\r\n\r\n  const config = {\r\n    renderer: \"canvas\",\r\n    autoFit: true,\r\n    xField: \"date\",\r\n    yField: \"price\",\r\n    label: false,\r\n    tooltip: { showMarkers: false },\r\n    lineStyle: {\r\n      stroke: \"orange\",\r\n      lineWidth: 1,\r\n      lineDash: [1, 1],\r\n      strokeOpacity: 1,\r\n      shadowColor: \"black\",\r\n      shadowBlur: 10,\r\n      shadowOffsetX: 5,\r\n      shadowOffsetY: 5,\r\n    },\r\n    meta: {\r\n      price: {\r\n        formatter: (price) => {\r\n          return formatPrice(price);\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Line\r\n      data={coinChartData}\r\n      {...config}\r\n      style={{ maxHeight: \"300px\", padding: \"15px 10px\" }}\r\n    />\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js",[],{"ruleId":"108","severity":1,"message":"109","line":2,"column":50,"nodeType":"110","messageId":"111","endLine":2,"endColumn":59},{"ruleId":"108","severity":1,"message":"112","line":10,"column":26,"nodeType":"110","messageId":"111","endLine":10,"endColumn":32},{"ruleId":"108","severity":1,"message":"113","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":16},{"ruleId":"108","severity":1,"message":"114","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"115","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":21},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"108","severity":1,"message":"120","line":14,"column":10,"nodeType":"110","messageId":"111","endLine":14,"endColumn":22},{"ruleId":"108","severity":1,"message":"121","line":15,"column":21,"nodeType":"110","messageId":"111","endLine":15,"endColumn":31},{"ruleId":"116","replacedBy":"122"},{"ruleId":"118","replacedBy":"123"},{"ruleId":"108","severity":1,"message":"124","line":13,"column":10,"nodeType":"110","messageId":"111","endLine":13,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":20,"column":6,"nodeType":"127","endLine":20,"endColumn":8,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":38,"column":6,"nodeType":"127","endLine":38,"endColumn":8,"suggestions":"130"},{"ruleId":"108","severity":1,"message":"131","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":22},{"ruleId":"108","severity":1,"message":"132","line":27,"column":26,"nodeType":"110","messageId":"111","endLine":27,"endColumn":43},{"ruleId":"108","severity":1,"message":"133","line":29,"column":9,"nodeType":"110","messageId":"111","endLine":29,"endColumn":12},{"ruleId":"125","severity":1,"message":"134","line":38,"column":6,"nodeType":"127","endLine":38,"endColumn":8,"suggestions":"135"},{"ruleId":"125","severity":1,"message":"136","line":45,"column":6,"nodeType":"127","endLine":45,"endColumn":20,"suggestions":"137"},{"ruleId":"108","severity":1,"message":"138","line":14,"column":10,"nodeType":"110","messageId":"111","endLine":14,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":59,"column":9,"nodeType":"141","messageId":"142","endLine":59,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":134,"column":39,"nodeType":"145","messageId":"146","endLine":134,"endColumn":46},{"ruleId":"143","severity":1,"message":"144","line":151,"column":37,"nodeType":"145","messageId":"146","endLine":151,"endColumn":44},{"ruleId":"143","severity":1,"message":"147","line":164,"column":64,"nodeType":"148","messageId":"149","endLine":164,"endColumn":66},{"ruleId":"143","severity":1,"message":"144","line":165,"column":37,"nodeType":"145","messageId":"146","endLine":165,"endColumn":44},{"ruleId":"108","severity":1,"message":"150","line":23,"column":10,"nodeType":"110","messageId":"111","endLine":23,"endColumn":20},{"ruleId":"108","severity":1,"message":"151","line":24,"column":10,"nodeType":"110","messageId":"111","endLine":24,"endColumn":24},{"ruleId":"125","severity":1,"message":"152","line":34,"column":13,"nodeType":"148","endLine":48,"endColumn":4},{"ruleId":"125","severity":1,"message":"153","line":35,"column":16,"nodeType":"154","endLine":35,"endColumn":56},{"ruleId":"125","severity":1,"message":"152","line":50,"column":13,"nodeType":"148","endLine":55,"endColumn":4},{"ruleId":"108","severity":1,"message":"155","line":12,"column":24,"nodeType":"110","messageId":"111","endLine":12,"endColumn":39},{"ruleId":"125","severity":1,"message":"152","line":15,"column":13,"nodeType":"148","endLine":20,"endColumn":4},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Footer' is assigned a value but never used.","'logDOM' is defined but never used.","'params' is defined but never used.","'formatPrice' is defined but never used.","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"'selectedCoin' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["156"],["157"],"'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has missing dependencies: 'numOfPages', 'selectedCoin', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["159"],"'CurrencyCard' is defined but never used.","'setScrollPosition' is assigned a value but never used.","'tip' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'numOfPages', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'scrollPosition' and 'setLoading'. Either include them or remove the dependency array.",["161"],"'attachTypeApi' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'searchText' is assigned a value but never used.","'scrollPosition' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","Assignments to the 'urlSlice' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'setSelectedCoin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [setLoading]",{"range":"170","text":"171"},"Update the dependencies array to be: [numOfPages, selectedCoin, setLoading, setnumOfPages]",{"range":"172","text":"173"},"Update the dependencies array to be: [numOfPages, setLoading, setnumOfPages]",{"range":"174","text":"175"},"Update the dependencies array to be: [scrollPosition, selectedCoin, setLoading]",{"range":"176","text":"177"},[642,644],"[setLoading]",[1168,1170],"[numOfPages, selectedCoin, setLoading, setnumOfPages]",[1240,1242],"[numOfPages, setLoading, setnumOfPages]",[1399,1413],"[scrollPosition, selectedCoin, setLoading]"]