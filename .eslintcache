[{"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js":"1","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js":"2","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js":"3","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js":"4","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js":"5","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx":"6","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx":"7","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx":"8","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js":"9","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js":"10","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js":"11","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx":"12","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx":"13","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx":"14","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js":"15","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinInfo.jsx":"16","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinBottomInfo.jsx":"17"},{"size":2670,"mtime":1614309567794,"results":"18","hashOfConfig":"19"},{"size":1862,"mtime":1614368711531,"results":"20","hashOfConfig":"19"},{"size":53,"mtime":1612069310891,"results":"21","hashOfConfig":"19"},{"size":218,"mtime":1612069310889,"results":"22","hashOfConfig":"19"},{"size":2294,"mtime":1614297509053,"results":"23","hashOfConfig":"19"},{"size":275,"mtime":1614016379932,"results":"24","hashOfConfig":"19"},{"size":781,"mtime":1613277189129,"results":"25","hashOfConfig":"19"},{"size":6174,"mtime":1614372962175,"results":"26","hashOfConfig":"19"},{"size":3087,"mtime":1614495272165,"results":"27","hashOfConfig":"19"},{"size":2501,"mtime":1613280329088,"results":"28","hashOfConfig":"19"},{"size":2310,"mtime":1614368491476,"results":"29","hashOfConfig":"19"},{"size":4924,"mtime":1614494053853,"results":"30","hashOfConfig":"19"},{"size":6036,"mtime":1614487187058,"results":"31","hashOfConfig":"19"},{"size":2834,"mtime":1614486004052,"results":"32","hashOfConfig":"19"},{"size":759,"mtime":1614123852321,"results":"33","hashOfConfig":"19"},{"size":1929,"mtime":1614495319045,"results":"34","hashOfConfig":"19"},{"size":2919,"mtime":1614495330423,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"phcpdk",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js",[],["75","76"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js",[],["77","78"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js",["79"],"import \"../App.css\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { getAllCoinsList } from \"../utils/api\";\r\nimport { AutoComplete, Button } from \"antd\";\r\nimport { Sorter } from \"./AutoComplete/Sorter\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { stateCoinsContext } from \"./App\";\r\nimport { RollbackOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function SearchBar(props) {\r\n  //useContext\r\n  const { selectedCoinC, isLoadingC, searchTextC } = useContext(\r\n    stateCoinsContext\r\n  );\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [searchText, setSearchText] = searchTextC;\r\n  //useState\r\n  const [searchCoins, setCoins] = useState([]);\r\n  const [searchOptions, setOptions] = useState([]);\r\n  const history = useHistory();\r\n\r\n  //Hooks\r\n  useEffect(() => {\r\n    getAllCoinsList().then((coins) => {\r\n      setCoins(coins);\r\n    });\r\n  }, []);\r\n\r\n  const onSelect = (data) => {\r\n    setSelectedCoin(data);\r\n    history.push({\r\n      pathname: \"/coin/\" + data,\r\n    });\r\n  };\r\n\r\n  const onSearch = (searchText) => {\r\n    setSearchText(searchText);\r\n    const filteredOptions = Sorter(searchCoins, searchText);\r\n    setOptions(filteredOptions);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    (async function () {\r\n      setLoading({\r\n        load: true,\r\n        tip: `Taking you back...`,\r\n      });\r\n      history.push(\"/\");\r\n      setLoading({\r\n        load: false,\r\n      });\r\n      setSearchText(\"\");\r\n      setSelectedCoin(\"\");\r\n    })();\r\n  };\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      {searchCoins && (\r\n        <div className=\"searchBar\">\r\n          {selectedCoin && (\r\n            <Button\r\n              onClick={handleClick}\r\n              type=\"primary\"\r\n              icon={<RollbackOutlined />}\r\n              size=\"big\"\r\n            >\r\n              back to Coins\r\n            </Button>\r\n          )}\r\n          <AutoComplete\r\n            placeholder=\"Looking for a specific coin?\"\r\n            value={searchText}\r\n            options={searchOptions || []}\r\n            onSelect={onSelect}\r\n            onSearch={onSearch}\r\n            backfill={true}\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx",["80","81","82"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Table, Avatar } from \"antd\";\r\nimport { TinyLine } from \"@ant-design/charts\";\r\nimport { stateCoinsContext } from \"../App\";\r\nimport { formatPrice, formatPercentage } from \"../../utils/helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { StickyTable, Row, Cell } from \"react-sticky-table\";\r\nimport LazyLoad from \"react-lazyload\";\r\n\r\nimport \"./TableScroll.css\";\r\n\r\nexport default function TableScroll(props) {\r\n  const { stateCoinsC, isLoadingC } = useContext(stateCoinsContext);\r\n\r\n  const [stateValues] = stateCoinsC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setLoading({\r\n      load: false,\r\n    });\r\n  }, []);\r\n\r\n  const config = {\r\n    height: 60,\r\n    width: 80,\r\n    autoFit: false,\r\n    smooth: false,\r\n    passive: false,\r\n\r\n    lineStyle: {\r\n      stroke: \"blue\",\r\n      lineWidth: 1,\r\n      lineDash: [1, 1],\r\n      strokeOpacity: 0.7,\r\n      shadowColor: \"black\",\r\n      shadowBlur: 10,\r\n      shadowOffsetX: 5,\r\n      shadowOffsetY: 5,\r\n    },\r\n    tooltip: {\r\n      formatter: (data) => {\r\n        return data.y;\r\n      },\r\n    },\r\n  };\r\n\r\n  const columns = {\r\n    coin: {\r\n      title: \"Coin\",\r\n      key: [\"image\", \"name\"],\r\n      render: (record) => {\r\n        const id = \"coin\";\r\n        const key = columns[id].key;\r\n        return (\r\n          <div style={{ display: \"flex\", maxWidth: \"130px\" }}>\r\n            <Avatar size=\"normal\" src={record[key[0]]} />\r\n            <span className=\"title\">{record[key[1]]}</span>\r\n            <div\r\n              style={{ position: \" absolute\", top: \"-35px\" }}\r\n              id={record.id}\r\n            ></div>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    symbol: {\r\n      title: \"\",\r\n      key: \"symbol\",\r\n      render: (record) => {\r\n        const id = \"symbol\";\r\n        const key = columns[id].key;\r\n        return (\r\n          <span style={{ maxWidth: \"80px\", display: \"inline-block\" }}>\r\n            {record[key].toUpperCase()}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    current_price: {\r\n      title: \"Price\",\r\n      key: \"current_price\",\r\n      render: (record) => {\r\n        const id = \"current_price\";\r\n        const key = columns[id].key;\r\n        return <span>{formatPrice(record[key])}</span>;\r\n      },\r\n    },\r\n    price_change_percentage_1h_in_currency: {\r\n      title: \"1h\",\r\n      key: \"price_change_percentage_1h_in_currency\",\r\n      render: (record) => {\r\n        const id = \"price_change_percentage_1h_in_currency\";\r\n        const key = columns[id].key;\r\n        return (\r\n          <span\r\n            className={`percent ${record[key] > 0 ? \"positive\" : \"negative\"}`}\r\n          >\r\n            {formatPercentage(record[key])}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    price_change_percentage_24h_in_currency: {\r\n      title: \"24h\",\r\n      key: \"price_change_percentage_24h_in_currency\",\r\n      render: (record) => {\r\n        const id = \"price_change_percentage_24h_in_currency\";\r\n        const key = columns[id].key;\r\n        return (\r\n          <span\r\n            className={`percent ${record[key] > 0 ? \"positive\" : \"negative\"}`}\r\n          >\r\n            {formatPercentage(record[key])}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    price_change_percentage_7d_in_currency: {\r\n      title: \"7d\",\r\n      key: \"price_change_percentage_7d_in_currency\",\r\n      render: (record) => {\r\n        const id = \"price_change_percentage_7d_in_currency\";\r\n        const key = columns[id].key;\r\n        return (\r\n          <span\r\n            className={`percent ${record[key] > 0 ? \"positive\" : \"negative\"}`}\r\n          >\r\n            {formatPercentage(record[key])}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    sparkline_in_7d: {\r\n      title: \"Last 7 Days\",\r\n      key: \"sparkline_in_7d\",\r\n      render: (record) => {\r\n        const id = \"sparkline_in_7d\";\r\n        const key = columns[id].key;\r\n        return <TinyLine data={record[key].price} {...config} />;\r\n      },\r\n    },\r\n  };\r\n\r\n  const renderHeader = (data, ind) => (\r\n    <Row className=\"sticky-table-row\">\r\n      {Object.values(columns).map((column, ind) => (\r\n        <Cell\r\n          key={`${column.title}${ind}`}\r\n          className=\"stickyBG\"\r\n          id={`${column.title}${ind}`}\r\n        >\r\n          {column.title}\r\n        </Cell>\r\n      ))}\r\n    </Row>\r\n  );\r\n\r\n  const renderRows = (data, ind) => (\r\n    <Row\r\n      className=\"coinRow\"\r\n      style={{ zIndex: \"3\", display: \"contents\" }}\r\n      key={`${data.id}${ind}`}\r\n      onClick={() => {\r\n        setLoading({\r\n          load: true,\r\n          tip: `Loading Coin!`,\r\n        });\r\n        //timeout\r\n        history.push(`/coin/${data.id}`);\r\n      }}\r\n    >\r\n      <LazyLoad\r\n        overflow\r\n        resize={true}\r\n        offset={500}\r\n        key={`${data.id}${ind}`}\r\n        height={50}\r\n        className=\"coinRow\"\r\n        style={{ display: \"table-row\" }}\r\n      >\r\n        <Cell className=\"stickyBG\" style={{ zIndex: \"2\" }}>\r\n          {columns.coin.render(data)}\r\n        </Cell>\r\n\r\n        <Cell>{columns.symbol.render(data)}</Cell>\r\n        <Cell>{columns.current_price.render(data)}</Cell>\r\n        <Cell>\r\n          {columns.price_change_percentage_1h_in_currency.render(data)}\r\n        </Cell>\r\n        <Cell>\r\n          {columns.price_change_percentage_24h_in_currency.render(data)}\r\n        </Cell>\r\n        <Cell>\r\n          {columns.price_change_percentage_7d_in_currency.render(data)}\r\n        </Cell>\r\n        <Cell>{columns.sparkline_in_7d.render(data)}</Cell>\r\n      </LazyLoad>\r\n    </Row>\r\n  );\r\n\r\n  const onScroll = (e) => {\r\n    if (e.target.scrollTop >= e.target.scrollHeight - e.target.offsetHeight) {\r\n      props.fetchData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {stateValues.coins && (\r\n        <div className=\"wrapper overflow-wrapper\">\r\n          <StickyTable\r\n            className=\"overflow CoinsListingContainer\"\r\n            onScroll={onScroll}\r\n          >\r\n            {renderHeader()}\r\n            {stateValues.coins.map((data, ind) => renderRows(data, ind))}\r\n          </StickyTable>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js",["83"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js",["84"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js",["85","86","87","88","89","90","91"],"import \"../App.css\";\r\nimport React, { useEffect, useContext, useRef } from \"react\";\r\nimport { getCoins, getAllCoinsList } from \"../utils/api.js\";\r\nimport { Spinner } from \"./loadingSpinner/Spinner\";\r\nimport { stateCoinsContext } from \"./App\";\r\nimport TableScroll from \"./TableScroll/TableScroll\";\r\n\r\nexport default function CoinsHomeListing(props) {\r\n  const {\r\n    moreItemsC,\r\n    numOfPagesC,\r\n    stateCoinsC,\r\n    isLoadingC,\r\n    scrollParentRefC,\r\n    selectedCoinC,\r\n    scrollPositionC,\r\n    fetchDataFunctionC,\r\n  } = useContext(stateCoinsContext);\r\n  const scrollParentRef = useRef(null);\r\n\r\n  const [selectedCoin] = selectedCoinC;\r\n  const [moreItems, setMoreItems] = moreItemsC;\r\n  const [numOfPages, setnumOfPages] = numOfPagesC;\r\n  const [stateValues, setStateValues] = stateCoinsC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [scrollPosition, setScrollPosition] = scrollPositionC;\r\n  const [fetchDataFunction, setFetchData] = fetchDataFunctionC;\r\n  //\r\n  const tip = \"\";\r\n\r\n  useEffect(() => {\r\n    if (!numOfPages) {\r\n      getAllCoinsList().then((responseAllCoins) => {\r\n        setnumOfPages(Math.ceil(responseAllCoins.length / 250));\r\n      });\r\n    }\r\n    if (!fetchDataFunction) {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (scrollPosition) {\r\n      document?.getElementById(scrollPosition)?.scrollIntoView();\r\n    }\r\n  }, [selectedCoin]);\r\n\r\n  const fetchData = () => {\r\n    if (!moreItems || selectedCoin) return;\r\n\r\n    setLoading({\r\n      load: true,\r\n      tip: \"Fetching Coins...\",\r\n    });\r\n    if (stateValues.page > numOfPages) {\r\n      setMoreItems(false);\r\n    }\r\n    getCoins(stateValues.page).then((responseCoins) => {\r\n      setStateValues((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          coins: [...prevState.coins, ...responseCoins],\r\n          page: prevState.page + 1,\r\n        };\r\n      });\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading.load && <Spinner tip={isLoading.tip} />}\r\n\r\n      {numOfPages && (\r\n        <div>\r\n          <TableScroll fetchData={fetchData} />\r\n          {!moreItems && (\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>You have seen it all...</b>\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx",["92","93","94"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx",["95","96"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinInfo.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinBottomInfo.jsx",["97","98","99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"105"},{"ruleId":"103","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":16,"column":10,"nodeType":"109","messageId":"110","endLine":16,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":16,"column":10,"nodeType":"109","messageId":"110","endLine":16,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":23,"column":6,"nodeType":"114","endLine":23,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":93,"column":27,"nodeType":"118","messageId":"119","endLine":93,"endColumn":29},{"ruleId":"112","severity":1,"message":"120","line":38,"column":6,"nodeType":"114","endLine":38,"endColumn":8,"suggestions":"121"},{"ruleId":"107","severity":1,"message":"122","line":14,"column":5,"nodeType":"109","messageId":"110","endLine":14,"endColumn":21},{"ruleId":"107","severity":1,"message":"123","line":19,"column":9,"nodeType":"109","messageId":"110","endLine":19,"endColumn":24},{"ruleId":"107","severity":1,"message":"124","line":26,"column":26,"nodeType":"109","messageId":"110","endLine":26,"endColumn":43},{"ruleId":"107","severity":1,"message":"125","line":27,"column":29,"nodeType":"109","messageId":"110","endLine":27,"endColumn":41},{"ruleId":"107","severity":1,"message":"126","line":29,"column":9,"nodeType":"109","messageId":"110","endLine":29,"endColumn":12},{"ruleId":"112","severity":1,"message":"127","line":40,"column":6,"nodeType":"114","endLine":40,"endColumn":8,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"129","line":46,"column":6,"nodeType":"114","endLine":46,"endColumn":20,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":31,"column":9,"nodeType":"133","endLine":31,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":64,"column":7,"nodeType":"133","endLine":64,"endColumn":38},{"ruleId":"131","severity":1,"message":"132","line":116,"column":7,"nodeType":"133","endLine":116,"endColumn":40},{"ruleId":"112","severity":1,"message":"134","line":41,"column":16,"nodeType":"135","endLine":41,"endColumn":56},{"ruleId":"112","severity":1,"message":"113","line":64,"column":6,"nodeType":"114","endLine":64,"endColumn":20,"suggestions":"136"},{"ruleId":"107","severity":1,"message":"137","line":14,"column":11,"nodeType":"109","messageId":"110","endLine":14,"endColumn":23},{"ruleId":"107","severity":1,"message":"138","line":18,"column":9,"nodeType":"109","messageId":"110","endLine":18,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":22,"column":16,"nodeType":"141","messageId":"142","endLine":22,"endColumn":17},{"ruleId":"112","severity":1,"message":"143","line":94,"column":6,"nodeType":"114","endLine":94,"endColumn":22,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'Table' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.","ArrayExpression",["147"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'numOfPages', 'selectedCoin', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["148"],"'scrollParentRefC' is assigned a value but never used.","'scrollParentRef' is assigned a value but never used.","'setScrollPosition' is assigned a value but never used.","'setFetchData' is assigned a value but never used.","'tip' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchData', 'fetchDataFunction', 'numOfPages', and 'setnumOfPages'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'scrollPosition'. Either include it or remove the dependency array.",["150"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","Assignments to the 'urlSlice' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["151"],"'selectedCoin' is assigned a value but never used.","'typeNumber' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has missing dependencies: 'bottomInfoData', 'constructData', and 'dataArr'. Either include them or remove the dependency array.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [setLoading]",{"range":"165","text":"166"},"Update the dependencies array to be: [numOfPages, selectedCoin, setLoading, setnumOfPages]",{"range":"167","text":"168"},"Update the dependencies array to be: [fetchData, fetchDataFunction, numOfPages, setnumOfPages]",{"range":"169","text":"170"},"Update the dependencies array to be: [scrollPosition, selectedCoin]",{"range":"171","text":"172"},"Update the dependencies array to be: [selectedCoin, setLoading]",{"range":"173","text":"174"},"Update the dependencies array to be: [bottomInfoData, constructData, dataArr, props.coinData]",{"range":"175","text":"176"},[751,753],"[setLoading]",[1168,1170],"[numOfPages, selectedCoin, setLoading, setnumOfPages]",[1248,1250],"[fetchData, fetchDataFunction, numOfPages, setnumOfPages]",[1383,1397],"[scrollPosition, selectedCoin]",[1858,1872],"[selectedCoin, setLoading]",[2576,2592],"[bottomInfoData, constructData, dataArr, props.coinData]"]