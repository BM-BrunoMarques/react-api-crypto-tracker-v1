[{"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js":"1","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js":"2","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js":"3","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js":"4","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js":"5","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js":"6","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx":"7","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx":"8","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx":"9","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx":"10","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js":"11","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js":"12","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js":"13","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx":"14","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx":"15","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx":"16","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js":"17","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinInfo.jsx":"18","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinDataTable.jsx":"19"},{"size":2632,"mtime":1613985064455,"results":"20","hashOfConfig":"21"},{"size":3233,"mtime":1613968510597,"results":"22","hashOfConfig":"21"},{"size":53,"mtime":1612069310891,"results":"23","hashOfConfig":"21"},{"size":218,"mtime":1612069310889,"results":"24","hashOfConfig":"21"},{"size":1677,"mtime":1613279570329,"results":"25","hashOfConfig":"21"},{"size":776,"mtime":1612760567320,"results":"26","hashOfConfig":"21"},{"size":296,"mtime":1613771445033,"results":"27","hashOfConfig":"21"},{"size":559,"mtime":1612987998476,"results":"28","hashOfConfig":"21"},{"size":781,"mtime":1613277189129,"results":"29","hashOfConfig":"21"},{"size":4551,"mtime":1613986359329,"results":"30","hashOfConfig":"21"},{"size":1029,"mtime":1613882177093,"results":"31","hashOfConfig":"21"},{"size":2501,"mtime":1613280329088,"results":"32","hashOfConfig":"21"},{"size":2655,"mtime":1613985467118,"results":"33","hashOfConfig":"21"},{"size":5091,"mtime":1613985601262,"results":"34","hashOfConfig":"21"},{"size":5273,"mtime":1613957723817,"results":"35","hashOfConfig":"21"},{"size":2581,"mtime":1613985533633,"results":"36","hashOfConfig":"21"},{"size":570,"mtime":1613968769955,"results":"37","hashOfConfig":"21"},{"size":2151,"mtime":1613968932508,"results":"38","hashOfConfig":"21"},{"size":1303,"mtime":1613968938405,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"phcpdk",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js",[],["85","86"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js",[],["87","88"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js",["89","90"],"import \"../App.css\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { getAllCoinsList } from \"../utils/api\";\r\nimport { AutoComplete } from \"antd\";\r\nimport { Sorter } from \"./AutoComplete/Sorter\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { stateCoinsContext } from \"./App\";\r\n\r\nexport default function SearchBar(props) {\r\n  //useContext\r\n  const { selectedCoinC, isLoadingC, searchTextC } = useContext(\r\n    stateCoinsContext\r\n  );\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [searchText, setSearchText] = searchTextC;\r\n  //useState\r\n  const [searchCoins, setCoins] = useState([]);\r\n  const [searchOptions, setOptions] = useState([]);\r\n  const history = useHistory();\r\n\r\n  //Hooks\r\n  useEffect(() => {\r\n    getAllCoinsList().then((coins) => {\r\n      setCoins(coins);\r\n    });\r\n  }, []);\r\n\r\n  const onSelect = (data) => {\r\n    setSelectedCoin(data);\r\n    history.push({\r\n      pathname: \"/coin/\" + data,\r\n    });\r\n    setSearchText('');\r\n  };\r\n\r\n  const onSearch = (searchText) => {\r\n    setSearchText(searchText);\r\n    const filteredOptions = Sorter(searchCoins, searchText);\r\n    setOptions(filteredOptions);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {searchCoins && (\r\n        <div>\r\n          <AutoComplete\r\n            placeholder='Looking for a specific coin?'\r\n            value={searchText}\r\n            options={searchOptions || []}\r\n            onSelect={onSelect}\r\n            onSearch={onSearch}\r\n            backfill={true}\r\n            disabled={isLoading}\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js",[],["91","92"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx",["93","94"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js",["95"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js",["96","97","98","99","100"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx",["101","102","103"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx",["104","105","106"],"import \"../../App.css\";\r\nimport \"./Coin.css\";\r\nimport { formatPrice, formatPercentage } from \"../../utils/helpers\";\r\nimport React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { stateCoinsContext } from \"../App\";\r\nimport { Spinner } from \"../loadingSpinner/Spinner\";\r\nimport { Avatar, Row, Col } from \"antd\";\r\nimport { getSelectedCoinData } from \"../../utils/api\";\r\nimport parse from \"html-react-parser\";\r\nimport TagLinks from \"./TagLinks\";\r\nimport CoinChart from \"./CoinChart\";\r\nimport CoinInfo from \"./CoinInfo\";\r\nimport CoinDataTable from \"./CoinDataTable\";\r\n\r\nexport default function Coin(props) {\r\n  const {\r\n    selectedCoinC,\r\n    isLoadingC,\r\n    searchTextC,\r\n    scrollPositionC,\r\n  } = useContext(stateCoinsContext);\r\n\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [searchText, setSearchText] = searchTextC;\r\n  const [scrollPosition, setScrollPosition] = scrollPositionC;\r\n\r\n  const [coinData, setcoinData] = useState();\r\n  const history = useHistory();\r\n\r\n  const { coinId } = props.history.location;\r\n\r\n  const avatarSize = {\r\n    xs: 40,\r\n    sm: 40,\r\n    md: 40,\r\n    lg: 64,\r\n    xl: 80,\r\n    xxl: 80,\r\n  };\r\n\r\n  let urlSlice = \"\";\r\n  useEffect(() => {\r\n    urlSlice = props.location.pathname.split(\"/\").pop();\r\n    if (!selectedCoin || selectedCoin !== urlSlice) {\r\n      if (urlSlice !== \"/coin\") {\r\n        setSelectedCoin(urlSlice);\r\n        setScrollPosition(urlSlice);\r\n      } else if (!coinId) {\r\n        setSelectedCoin(coinId);\r\n        setScrollPosition(coinId);\r\n      } else {\r\n        history.push(\"/\");\r\n        setSelectedCoin(\"\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCoin) {\r\n      (async function () {\r\n        const coinData = await getSelectedCoinData(selectedCoin);\r\n        setcoinData(coinData);\r\n      })();\r\n    }\r\n  }, [selectedCoin]);\r\n\r\n  const handleClick = () => {\r\n    setLoading({\r\n      load: true,\r\n      tip: `Taking you back...`,\r\n    });\r\n    //CHANGE\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n      setSearchText(\"\");\r\n      setSelectedCoin(\"\");\r\n    }, 10);\r\n    //\r\n  };\r\n\r\n  return (\r\n    <Col className=\"coinStage\" span={24}>\r\n      {coinData && (\r\n        <Row>\r\n          {isLoading.load && <Spinner tip={isLoading.tip} />}\r\n\r\n          <button onClick={handleClick}>back to Coins</button>\r\n\r\n          <Col xs={{ span: 24 }} sm={{ span: 22, offset: 1 }}>\r\n            <Row className=\"header\" justify=\"start\">\r\n              <Col span={14}>\r\n                <div className=\"headerLeft\">\r\n                  <Avatar size={avatarSize} src={coinData.image?.large} />\r\n\r\n                  <h2 className=\"titleCoin\">\r\n                    {coinData.name} <i>({coinData.symbol?.toUpperCase()})</i>\r\n                  </h2>\r\n                </div>\r\n              </Col>\r\n              <Col span={9} offset={1}>\r\n                <div className=\"headerRight\">\r\n                  <span className=\"currentPrice\">\r\n                    {formatPrice(coinData.market_data.current_price.usd)}\r\n                  </span>\r\n                  <span\r\n                    className={`percent ${\r\n                      coinData.market_data.price_change_percentage_24h >= 0\r\n                        ? \"positive\"\r\n                        : \"negative\"\r\n                    }`}\r\n                  >\r\n                    {formatPercentage(\r\n                      coinData.market_data.price_change_percentage_24h\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Col md={{ span: 24 }}>\r\n              <Row style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <Col className=\"leftSide\" xs={{ span: 24 }} sm={{ span: 13 }}>\r\n                  <TagLinks coinData={coinData} />\r\n                </Col>\r\n\r\n                <Col\r\n                  className=\"rightSide\"\r\n                  xs={{ span: 24 }}\r\n                  sm={{ span: 8, offset: 2 }}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <CoinInfo coinData={coinData} />\r\n                </Col>\r\n              </Row>\r\n              <Row justify=\"start\">\r\n                <Col span={24}>\r\n                  <Row>\r\n                    <Col\r\n                      xs={{ span: 22, offset: 1 }}\r\n                      sm={{ span: 23, offset: 1 }}\r\n                      md={{ span: 14, offset: 0 }}\r\n                    >\r\n                      <CoinChart />\r\n                    </Col>\r\n                    <Col\r\n                      xs={{ span: 22, offset: 2 }}\r\n                      sm={{ span: 17, offset: 2 }}\r\n                      md={{ span: 9, offset: 1 }}\r\n                    >\r\n                      <CoinDataTable coinData={coinData} />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Col xs={{ span: 24, offset: 0 }} xl={{ span: 10, offset: 0 }}>\r\n              {parse(`${coinData.description?.en}`)}\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Col>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx",["107"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinInfo.jsx",["108"],"import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport {\r\n  formatPrice,\r\n  formatPercentage,\r\n  formatNumber,\r\n} from \"../../utils/helpers\";\r\n\r\nexport default function CoinDataTable(props) {\r\n  const { coinData } = props;\r\n\r\n  const typeMoney = formatPrice;\r\n  const typePercent = formatPercentage;\r\n  const typeNumber = formatNumber;\r\n\r\n  const renderInfo = (data, label, convertData) => {\r\n    if (\r\n      (typeof data === \"object\" && !Number(data[0])) ||\r\n      (typeof data !== \"object\" && !Number(data))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <div className=\"tagRow\">\r\n        <div className=\"tagLegend\">{label}</div>\r\n        {typeof data === \"object\" ? (\r\n          <div className=\"info\">\r\n            {convertData(data[0])} / {convertData(data[1])}\r\n          </div>\r\n        ) : (\r\n          <div className=\"info\">{convertData(data)}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row className=\"coinTableContainer\">\r\n      <Col\r\n        className=\"topRightInfo\"\r\n        sm={{ span: 22, offset: 2 }}\r\n        xs={{ span: 12 }}\r\n      >\r\n        {renderInfo(\r\n          coinData.market_data.market_cap.usd,\r\n          \"Market Cap\",\r\n          typeMoney\r\n        )}\r\n        {renderInfo(\r\n          [coinData.market_data.low_24h.usd, coinData.market_data.high_24h.usd],\r\n          \"24h Low / 24h High\",\r\n          typeMoney\r\n        )}\r\n        {renderInfo(\r\n          coinData.market_data.fully_diluted_valuation.usd,\r\n          \"Fully Diluted Valuation\",\r\n          typeMoney\r\n        )}\r\n      </Col>\r\n      <Col\r\n        className=\"topRightInfo\"\r\n        sm={{ span: 22, offset: 2 }}\r\n        xs={{ span: 12 }}\r\n      >\r\n        {renderInfo(coinData.total_volume, \"24 Hour Trading Vol\", typeMoney)}\r\n        {renderInfo(\r\n          [\r\n            coinData.market_data.circulating_supply,\r\n            coinData.market_data.max_supply,\r\n          ],\r\n          \"Circulating Supply\",\r\n          typeNumber\r\n        )}\r\n        {renderInfo(\r\n          coinData.market_data.total_volume.usd,\r\n          \"24 Hour Trading Vol\",\r\n          typeMoney\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinDataTable.jsx",["109","110","111","112","113","114","115"],"import \"../../App.css\";\r\nimport \"./Coin.css\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { stateCoinsContext } from \"../App\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport { getSelectedCoin } from \"../../utils/api\";\r\nimport { formatPrice } from \"../../utils/helpers\";\r\n\r\nexport default function CoinDataTable(props) {\r\n  const [coinDataTable, setCoinDataTab] = useState();\r\n\r\n  {\r\n    /* TABLE\r\n                  BTC Price\t$52,170.13\r\n                      Market Cap\t$972,022,418,270\r\n                      Market Cap Dominance\t60.02%\r\n                      Trading Volume\t$67,427,596,400\r\n                      Volume / Market Cap\t0.0694\r\n                      24h Low / 24h High\t$49,364.64 / $52,547.80\r\n                      7d Low / 7d High\t$46,941.29 / $52,143.68\r\n                      All-Time High\t$52,547.80 -0.7%\r\n                      Feb 17, 2021 (about 8 hours)\r\n                      All-Time Low\t$67.81 76815.4%\r\n                  */\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      if (props.coinData) {\r\n        setCoinDataTab(props.coinData);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {coinDataTable && (\r\n        <div>\r\n          <span>TEXT</span> <span>TEXT</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":14,"column":10,"nodeType":"124","messageId":"125","endLine":14,"endColumn":22},{"ruleId":"122","severity":1,"message":"126","line":15,"column":21,"nodeType":"124","messageId":"125","endLine":15,"endColumn":31},{"ruleId":"116","replacedBy":"127"},{"ruleId":"118","replacedBy":"128"},{"ruleId":"122","severity":1,"message":"129","line":13,"column":10,"nodeType":"124","messageId":"125","endLine":13,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":20,"column":6,"nodeType":"132","endLine":20,"endColumn":8,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":38,"column":6,"nodeType":"132","endLine":38,"endColumn":8,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"136","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":22},{"ruleId":"122","severity":1,"message":"137","line":27,"column":26,"nodeType":"124","messageId":"125","endLine":27,"endColumn":43},{"ruleId":"122","severity":1,"message":"138","line":29,"column":9,"nodeType":"124","messageId":"125","endLine":29,"endColumn":12},{"ruleId":"130","severity":1,"message":"139","line":38,"column":6,"nodeType":"132","endLine":38,"endColumn":8,"suggestions":"140"},{"ruleId":"130","severity":1,"message":"141","line":45,"column":6,"nodeType":"132","endLine":45,"endColumn":20,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":49,"column":9,"nodeType":"145","messageId":"146","endLine":49,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":134,"column":33,"nodeType":"149","messageId":"150","endLine":134,"endColumn":40},{"ruleId":"147","severity":1,"message":"148","line":147,"column":33,"nodeType":"149","messageId":"150","endLine":147,"endColumn":40},{"ruleId":"122","severity":1,"message":"151","line":26,"column":10,"nodeType":"124","messageId":"125","endLine":26,"endColumn":20},{"ruleId":"122","severity":1,"message":"152","line":27,"column":10,"nodeType":"124","messageId":"125","endLine":27,"endColumn":24},{"ruleId":"130","severity":1,"message":"153","line":45,"column":16,"nodeType":"154","endLine":45,"endColumn":56},{"ruleId":"122","severity":1,"message":"155","line":13,"column":24,"nodeType":"124","messageId":"125","endLine":13,"endColumn":39},{"ruleId":"122","severity":1,"message":"156","line":13,"column":9,"nodeType":"124","messageId":"125","endLine":13,"endColumn":20},{"ruleId":"122","severity":1,"message":"157","line":3,"column":27,"nodeType":"124","messageId":"125","endLine":3,"endColumn":37},{"ruleId":"122","severity":1,"message":"158","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":27},{"ruleId":"122","severity":1,"message":"159","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":14},{"ruleId":"122","severity":1,"message":"160","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":25},{"ruleId":"122","severity":1,"message":"161","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":12,"column":3,"nodeType":"164","messageId":"165","endLine":25,"endColumn":4},{"ruleId":"130","severity":1,"message":"166","line":33,"column":6,"nodeType":"132","endLine":33,"endColumn":8,"suggestions":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],["168"],["169"],"no-unused-vars","'selectedCoin' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.",["168"],["169"],"'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.","ArrayExpression",["170"],"React Hook useEffect has missing dependencies: 'numOfPages', 'selectedCoin', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["171"],"'CurrencyCard' is defined but never used.","'setScrollPosition' is assigned a value but never used.","'tip' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'numOfPages', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["172"],"React Hook useEffect has missing dependencies: 'scrollPosition' and 'setLoading'. Either include them or remove the dependency array.",["173"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'searchText' is assigned a value but never used.","'scrollPosition' is assigned a value but never used.","Assignments to the 'urlSlice' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'setSelectedCoin' is assigned a value but never used.","'typePercent' is assigned a value but never used.","'useContext' is defined but never used.","'stateCoinsContext' is defined but never used.","'Line' is defined but never used.","'getSelectedCoin' is defined but never used.","'formatPrice' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'props.coinData'. Either include it or remove the dependency array. If 'setCoinDataTab' needs the current value of 'props.coinData', you can also switch to useReducer instead of useState and read 'props.coinData' in the reducer.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [setLoading]",{"range":"185","text":"186"},"Update the dependencies array to be: [numOfPages, selectedCoin, setLoading, setnumOfPages]",{"range":"187","text":"188"},"Update the dependencies array to be: [numOfPages, setLoading, setnumOfPages]",{"range":"189","text":"190"},"Update the dependencies array to be: [scrollPosition, selectedCoin, setLoading]",{"range":"191","text":"192"},"Update the dependencies array to be: [props.coinData]",{"range":"193","text":"194"},[642,644],"[setLoading]",[1168,1170],"[numOfPages, selectedCoin, setLoading, setnumOfPages]",[1240,1242],"[numOfPages, setLoading, setnumOfPages]",[1399,1413],"[scrollPosition, selectedCoin, setLoading]",[1136,1138],"[props.coinData]"]