[{"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js":"1","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js":"2","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js":"3","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js":"4","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js":"5","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin.js":"6","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js":"7","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx":"8","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx":"9","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx":"10","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx":"11","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js":"12","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js":"13","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js":"14"},{"size":2400,"mtime":1613279722802,"results":"15","hashOfConfig":"16"},{"size":2173,"mtime":1613111205729,"results":"17","hashOfConfig":"16"},{"size":53,"mtime":1612069310891,"results":"18","hashOfConfig":"16"},{"size":218,"mtime":1612069310889,"results":"19","hashOfConfig":"16"},{"size":1677,"mtime":1613279570329,"results":"20","hashOfConfig":"16"},{"size":1300,"mtime":1613280286088,"results":"21","hashOfConfig":"16"},{"size":776,"mtime":1612760567320,"results":"22","hashOfConfig":"16"},{"size":275,"mtime":1613280155627,"results":"23","hashOfConfig":"16"},{"size":559,"mtime":1612987998476,"results":"24","hashOfConfig":"16"},{"size":781,"mtime":1613277189129,"results":"25","hashOfConfig":"16"},{"size":4156,"mtime":1613285837515,"results":"26","hashOfConfig":"16"},{"size":682,"mtime":1613064816439,"results":"27","hashOfConfig":"16"},{"size":2501,"mtime":1613280329088,"results":"28","hashOfConfig":"16"},{"size":2501,"mtime":1613280329088,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"phcpdk",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js",["66","67"],"import \"../App.css\";\r\nimport React, { useState, useRef, createContext, useEffect } from \"react\";\r\n\r\nimport Coin from \"./Coin\";\r\nimport CoinsHomeListing from \"./CoinsHomeListing\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Layout, Row, Col } from \"antd\";\r\nconst { Header, Content, Footer } = Layout;\r\nexport const stateCoinsContext = createContext();\r\n\r\nfunction App() {\r\n  const scrollParentRef = useRef(null);\r\n\r\n  const [stateValues, setStateValues] = useState({\r\n    coins: [],\r\n    page: 1,\r\n    isLoading: false,\r\n  });\r\n  // const [page, setPage] = useState(1);\r\n\r\n  const [selectedCoin, setSelectedCoin] = useState(\"\");\r\n  const [moreItems, setMoreItems] = useState(true);\r\n  const [numOfPages, setnumOfPages] = useState();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const coinsStoreContext = {\r\n    selectedCoinC: [selectedCoin, setSelectedCoin],\r\n    moreItemsC: [moreItems, setMoreItems],\r\n    numOfPagesC: [numOfPages, setnumOfPages],\r\n    stateCoinsC: [stateValues, setStateValues],\r\n    isLoadingC: [isLoading, setLoading],\r\n    searchTextC: [searchText, setSearchText],\r\n    scrollParentRefC: scrollParentRef,\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ height: \"100%\" }}>\r\n      <stateCoinsContext.Provider value={coinsStoreContext}>\r\n        <BrowserRouter>\r\n          <Header>\r\n            <Row style={{ width: \"100%\" }} align=\"middle\" justify=\"end\">\r\n              <Col\r\n                xs={{ span: 10, offset: 9 }}\r\n                xl={{ span: 5, offset: 18 }}\r\n              >\r\n                <SearchBar\r\n                  selectedCoin={selectedCoin}\r\n                  setSelectedCoin={setSelectedCoin}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Header>\r\n          <Content>\r\n            <Row style={{ height: \"100%\" }} align=\"middle\">\r\n              <Col\r\n                xs={{ span: 24, offset: 0 }}\r\n                sm={{ span: 18, offset: 3 }}\r\n                xl={{ span: 18, offset: 3 }}\r\n              >\r\n                <Route path=\"/\" exact component={CoinsHomeListing} />\r\n\r\n                <Route path=\"/coin\" component={Coin} />\r\n              </Col>\r\n            </Row>\r\n          </Content>\r\n        </BrowserRouter>\r\n      </stateCoinsContext.Provider>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["68","69"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js",["70"],"import { params } from \"./params.js\";\r\n\r\n// export function servicePing() {\r\n//   return fetch(\"https://api.coingecko.com/api/v3/ping\")\r\n//     .then((response) => response.json())\r\n//     .then((data) => console.log(data));\r\n// }\r\n\r\n// let allCoins = async () => {\r\n//   return fetch(\"https://api.coingecko.com/api/v3/coins/list\")\r\n//     .then((response) => response.json())\r\n//     .then((data) => data.length);\r\n// };\r\n\r\nexport async function getCoins(pageNum) {\r\n  const coinReq = await fetch(`\r\n  https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${pageNum}&sparkline=true&price_change_percentage=1h,24h,7d`);\r\n  return coinReq.json();\r\n}\r\n\r\nexport async function getAllCoinsList() {\r\n  const coinReq = await fetch(\"https://api.coingecko.com/api/v3/coins/list?include_platform=false\");\r\n  const coinRes = await coinReq.json();\r\n\r\n  const coinList = coinRes.map(({ name, id }) => {\r\n    const coin = {value: id, label: name}\r\n    return coin;\r\n  });\r\n\r\n  return coinList\r\n  };\r\n\r\n  // .then(({ name, id }) => {\r\n  //   test.push({ name, id });\r\n  //   console.log(\"here : \", test);\r\n  //   // return test.push({name, id})\r\n  // });\r\n  // .then((response) => {\r\n  //   // return response\r\n  //   let searchCoins = [];\r\n  //   response.map((coin) => {\r\n  //     searchCoins.push({ coin });\r\n  //   });\r\n  //   return searchCoins;\r\n  // });\r\n// }\r\n\r\n// export const getFirstCoins = () => {\r\n//   return firstFetch().then((result) => result);\r\n// }\r\n\r\n// export function getAllCoins() {\r\n//   allCoins().then((numOfCoins) => {\r\n//     console.log(numOfCoins.length)\r\n//     let numOfFetch = Math.ceil(numOfCoins / params.maxApiListCalls)\r\n//     console.log(numOfFetch)\r\n//     for (let i = 0; i < numOfFetch; i++)\r\n//     {\r\n//       let fetchPage = i + 1;\r\n//       fetch(\r\n//         `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=${fetchPage}&sparkline=false&price_change_percentage=1h%2C24h%2C7d`\r\n//       )\r\n//       .then((response) => response.json())\r\n//       .then((data) => console.log('allcoins: ',data));\r\n//     }\r\n//     return\r\n//   });\r\n// }\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js",["71","72"],"import \"../App.css\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { getAllCoinsList } from \"../utils/api\";\r\nimport { AutoComplete } from \"antd\";\r\nimport { Sorter } from \"./AutoComplete/Sorter\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { stateCoinsContext } from \"./App\";\r\n\r\nexport default function SearchBar(props) {\r\n  //useContext\r\n  const { selectedCoinC, isLoadingC, searchTextC } = useContext(\r\n    stateCoinsContext\r\n  );\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [searchText, setSearchText] = searchTextC;\r\n  //useState\r\n  const [searchCoins, setCoins] = useState([]);\r\n  const [searchOptions, setOptions] = useState([]);\r\n  const history = useHistory();\r\n\r\n  //Hooks\r\n  useEffect(() => {\r\n    getAllCoinsList().then((coins) => {\r\n      setCoins(coins);\r\n    });\r\n  }, []);\r\n\r\n  const onSelect = (data) => {\r\n    setSelectedCoin(data);\r\n    history.push({\r\n      pathname: \"/coin/\" + data,\r\n    });\r\n    setSearchText('');\r\n  };\r\n\r\n  const onSearch = (searchText) => {\r\n    setSearchText(searchText);\r\n    const filteredOptions = Sorter(searchCoins, searchText);\r\n    setOptions(filteredOptions);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {searchCoins && (\r\n        <div>\r\n          <AutoComplete\r\n            placeholder='Looking for a specific coin?'\r\n            value={searchText}\r\n            options={searchOptions || []}\r\n            onSelect={onSelect}\r\n            onSearch={onSearch}\r\n            backfill={true}\r\n            disabled={isLoading}\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin.js",["73","74","75"],"import \"../App.css\";\r\nimport React, { useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { stateCoinsContext } from \"./App\";\r\nimport { Spinner } from \"./loadingSpinner/Spinner\";\r\n\r\nfunction Coin(props) {\r\n  const { selectedCoinC, isLoadingC, searchTextC } = useContext(stateCoinsContext);\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [searchText, setSearchText] = searchTextC;\r\n\r\n  const history = useHistory();\r\n\r\n  const { coinId } = props.history.location;\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const urlSlice = props.location.pathname.split(\"/\").pop();\r\n    if (!selectedCoin || selectedCoin !== urlSlice) {\r\n      if (urlSlice !== \"/coin\") {\r\n        setSelectedCoin(urlSlice);\r\n      } else if (!coinId) {\r\n        setSelectedCoin(coinId);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleClick = async () => {\r\n    await setLoading(true);\r\n    //CHANGE\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 10);\r\n    //\r\n    setSearchText('')\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <Spinner tip='Taking you back' />}\r\n      <button onClick={handleClick}>back to Coins</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js",[],["76","77"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx",[],["78","79"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js",["80"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js",["81"],"import \"../App.css\";\r\nimport React, { useEffect, useContext, useRef } from \"react\";\r\nimport { getCoins, getAllCoinsList } from \"../utils/api.js\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Spinner } from \"./loadingSpinner/Spinner\";\r\nimport { stateCoinsContext } from \"./App\";\r\nimport TableScroll from \"./TableScroll/TableScroll\";\r\n\r\nexport default function CoinsHomeListing(props) {\r\n  const {\r\n    moreItemsC,\r\n    numOfPagesC,\r\n    stateCoinsC,\r\n    isLoadingC,\r\n    scrollParentRefC,\r\n    selectedCoinC,\r\n  } = useContext(stateCoinsContext);\r\n  const scrollParentRef = useRef(null);\r\n\r\n  const [selectedCoin] = selectedCoinC;\r\n  const [moreItems, setMoreItems] = moreItemsC;\r\n  const [numOfPages, setnumOfPages] = numOfPagesC;\r\n  const [stateValues, setStateValues] = stateCoinsC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n\r\n  useEffect(() => {\r\n    if (!numOfPages) {\r\n      getAllCoinsList().then((responseAllCoins) => {\r\n        setnumOfPages(Math.ceil(responseAllCoins.length / 250));\r\n      });\r\n    }\r\n\r\n    if (selectedCoin) {\r\n      document?.getElementById(selectedCoin)?.scrollIntoView();\r\n    }\r\n\r\n    setLoading(false)\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    if (isLoading || !moreItems) return;\r\n    //\r\n    setLoading(true);\r\n    if (stateValues.page > numOfPages) {\r\n      setMoreItems(false);\r\n    }\r\n    getCoins(stateValues.page).then((responseCoins) => {\r\n      console.log(\"fetched\");\r\n\r\n      setStateValues((prevState) => {\r\n        return {\r\n          coins: prevState.coins\r\n            .concat(responseCoins)\r\n            .filter((val, id, array) => array.indexOf(val) === id),\r\n          page: prevState.page + 1,\r\n        };\r\n      });\r\n      setLoading(false);\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      ref={scrollParentRef}\r\n      style={{\r\n        minHeight: \"500px\",\r\n        maxHeight: \"70vh\",\r\n        overflowY: \"scroll\",\r\n      }}\r\n    >\r\n      {isLoading && <Spinner tip='Fetching more coins...' />}\r\n\r\n      \r\n      {numOfPages && (\r\n        <InfiniteScroll\r\n          loadMore={fetchData}\r\n          hasMore={moreItems}\r\n          getScrollParent={() => scrollParentRefC.current}\r\n          useWindow={false}\r\n        >\r\n          <TableScroll />\r\n          {/* <CurrencyCard coins={stateValues.coins} /> */}\r\n          {!moreItems && (\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>You have seen it all...</b>\r\n            </p>\r\n          )}\r\n        </InfiniteScroll>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"82","severity":1,"message":"83","line":2,"column":50,"nodeType":"84","messageId":"85","endLine":2,"endColumn":59},{"ruleId":"82","severity":1,"message":"86","line":10,"column":26,"nodeType":"84","messageId":"85","endLine":10,"endColumn":32},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"82","severity":1,"message":"91","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":16},{"ruleId":"82","severity":1,"message":"92","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":22},{"ruleId":"82","severity":1,"message":"93","line":15,"column":21,"nodeType":"84","messageId":"85","endLine":15,"endColumn":31},{"ruleId":"82","severity":1,"message":"94","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":14},{"ruleId":"82","severity":1,"message":"95","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":31,"column":6,"nodeType":"98","endLine":31,"endColumn":8,"suggestions":"99"},{"ruleId":"87","replacedBy":"100"},{"ruleId":"89","replacedBy":"101"},{"ruleId":"87","replacedBy":"102"},{"ruleId":"89","replacedBy":"103"},{"ruleId":"96","severity":1,"message":"104","line":38,"column":6,"nodeType":"98","endLine":38,"endColumn":8,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"104","line":38,"column":6,"nodeType":"98","endLine":38,"endColumn":8,"suggestions":"106"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Footer' is assigned a value but never used.","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'params' is defined but never used.","'selectedCoin' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Link' is defined but never used.","'searchText' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'coinId', 'history', 'props.location.pathname', 'selectedCoin', and 'setSelectedCoin'. Either include them or remove the dependency array.","ArrayExpression",["109"],["107"],["108"],["107"],["108"],"React Hook useEffect has missing dependencies: 'numOfPages', 'selectedCoin', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["110"],["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},"Update the dependencies array to be: [coinId, history, props.location.pathname, selectedCoin, setSelectedCoin]",{"range":"117","text":"118"},"Update the dependencies array to be: [numOfPages, selectedCoin, setLoading, setnumOfPages]",{"range":"119","text":"120"},{"range":"121","text":"120"},[926,928],"[coinId, history, props.location.pathname, selectedCoin, setSelectedCoin]",[1168,1170],"[numOfPages, selectedCoin, setLoading, setnumOfPages]",[1168,1170]]