[{"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js":"1","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js":"2","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js":"3","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js":"4","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js":"5","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js":"6","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx":"7","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx":"8","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx":"9","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx":"10","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js":"11","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js":"12","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js":"13","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx":"14","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx":"15","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx":"16","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js":"17","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinInfo.jsx":"18","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinDataTable.jsx":"19"},{"size":2614,"mtime":1613782709770,"results":"20","hashOfConfig":"21"},{"size":3233,"mtime":1613968510597,"results":"22","hashOfConfig":"21"},{"size":53,"mtime":1612069310891,"results":"23","hashOfConfig":"21"},{"size":218,"mtime":1612069310889,"results":"24","hashOfConfig":"21"},{"size":1677,"mtime":1613279570329,"results":"25","hashOfConfig":"21"},{"size":776,"mtime":1612760567320,"results":"26","hashOfConfig":"21"},{"size":296,"mtime":1613771445033,"results":"27","hashOfConfig":"21"},{"size":559,"mtime":1612987998476,"results":"28","hashOfConfig":"21"},{"size":781,"mtime":1613277189129,"results":"29","hashOfConfig":"21"},{"size":4551,"mtime":1613530729590,"results":"30","hashOfConfig":"21"},{"size":1029,"mtime":1613882177093,"results":"31","hashOfConfig":"21"},{"size":2501,"mtime":1613280329088,"results":"32","hashOfConfig":"21"},{"size":2808,"mtime":1613871505302,"results":"33","hashOfConfig":"21"},{"size":5081,"mtime":1613955570315,"results":"34","hashOfConfig":"21"},{"size":5273,"mtime":1613957723817,"results":"35","hashOfConfig":"21"},{"size":2265,"mtime":1613968677594,"results":"36","hashOfConfig":"21"},{"size":570,"mtime":1613968769955,"results":"37","hashOfConfig":"21"},{"size":2151,"mtime":1613968932508,"results":"38","hashOfConfig":"21"},{"size":1303,"mtime":1613968938405,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"phcpdk",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\App.js",["84","85"],"import \"../App.css\";\r\nimport React, { useState, useRef, createContext, useEffect } from \"react\";\r\n\r\nimport Coin from \"./Coin/Coin\";\r\nimport CoinsHomeListing from \"./CoinsHomeListing\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { Layout, Row, Col } from \"antd\";\r\nconst { Header, Content, Footer } = Layout;\r\nexport const stateCoinsContext = createContext();\r\n\r\nfunction App() {\r\n  const scrollParentRef = useRef(null);\r\n\r\n  const [stateValues, setStateValues] = useState({\r\n    coins: [],\r\n    page: 1,\r\n    isLoading: false,\r\n  });\r\n\r\n  const [isLoading, setLoading] = useState({\r\n    load: false,\r\n    tip: \"\",\r\n  });\r\n\r\n  // const [page, setPage] = useState(1);\r\n\r\n  const [selectedCoin, setSelectedCoin] = useState(\"\");\r\n  const [moreItems, setMoreItems] = useState(true);\r\n  const [numOfPages, setnumOfPages] = useState();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [scrollPosition, setScrollPosition] = useState(\"\");\r\n\r\n  const coinsStoreContext = {\r\n    selectedCoinC: [selectedCoin, setSelectedCoin],\r\n    moreItemsC: [moreItems, setMoreItems],\r\n    numOfPagesC: [numOfPages, setnumOfPages],\r\n    stateCoinsC: [stateValues, setStateValues],\r\n    isLoadingC: [isLoading, setLoading],\r\n    searchTextC: [searchText, setSearchText],\r\n    scrollPositionC: [scrollPosition, setScrollPosition],\r\n    scrollParentRefC: scrollParentRef,\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ height: \"100%\" }}>\r\n      <stateCoinsContext.Provider value={coinsStoreContext}>\r\n        <BrowserRouter>\r\n          <Header>\r\n            <Row style={{ width: \"100%\" }} align=\"middle\" justify=\"end\">\r\n              <Col xs={{ span: 10, offset: 9 }} xl={{ span: 5, offset: 18 }}>\r\n                <SearchBar\r\n                  selectedCoin={selectedCoin}\r\n                  setSelectedCoin={setSelectedCoin}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Header>\r\n          <Content>\r\n            <Row style={{ height: \"100%\" }} align=\"middle\">\r\n              <Col\r\n                xs={{ span: 24, offset: 0 }}\r\n                sm={{ span: 18, offset: 3 }}\r\n                xl={{ span: 18, offset: 3 }}\r\n                xxl={{ span: 15, offset: 5 }}\r\n                style={{ height: \"100%\", maxHeight: \"70vh\" }}\r\n              >\r\n                <Route path=\"/\" component={CoinsHomeListing} />\r\n                <Route path=\"/coin\" component={Coin} />\r\n              </Col>\r\n            </Row>\r\n          </Content>\r\n        </BrowserRouter>\r\n      </stateCoinsContext.Provider>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["86","87"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\api.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\params.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\index.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\SearchBar.js",["88","89"],"import \"../App.css\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { getAllCoinsList } from \"../utils/api\";\r\nimport { AutoComplete } from \"antd\";\r\nimport { Sorter } from \"./AutoComplete/Sorter\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { stateCoinsContext } from \"./App\";\r\n\r\nexport default function SearchBar(props) {\r\n  //useContext\r\n  const { selectedCoinC, isLoadingC, searchTextC } = useContext(\r\n    stateCoinsContext\r\n  );\r\n  const [selectedCoin, setSelectedCoin] = selectedCoinC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [searchText, setSearchText] = searchTextC;\r\n  //useState\r\n  const [searchCoins, setCoins] = useState([]);\r\n  const [searchOptions, setOptions] = useState([]);\r\n  const history = useHistory();\r\n\r\n  //Hooks\r\n  useEffect(() => {\r\n    getAllCoinsList().then((coins) => {\r\n      setCoins(coins);\r\n    });\r\n  }, []);\r\n\r\n  const onSelect = (data) => {\r\n    setSelectedCoin(data);\r\n    history.push({\r\n      pathname: \"/coin/\" + data,\r\n    });\r\n    setSearchText('');\r\n  };\r\n\r\n  const onSearch = (searchText) => {\r\n    setSearchText(searchText);\r\n    const filteredOptions = Sorter(searchCoins, searchText);\r\n    setOptions(filteredOptions);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {searchCoins && (\r\n        <div>\r\n          <AutoComplete\r\n            placeholder='Looking for a specific coin?'\r\n            value={searchText}\r\n            options={searchOptions || []}\r\n            onSelect={onSelect}\r\n            onSearch={onSearch}\r\n            backfill={true}\r\n            disabled={isLoading}\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\ItemList.js",[],["90","91"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\loadingSpinner\\Spinner.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CurrencyCard\\CurrencyCard.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\AutoComplete\\Sorter.jsx",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\TableScroll\\TableScroll.jsx",["92","93"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Table, Avatar } from \"antd\";\r\nimport { TinyLine } from \"@ant-design/charts\";\r\nimport { stateCoinsContext } from \"../App\";\r\nimport { formatPrice, formatPercentage } from \"../../utils/helpers\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./TableScroll.css\";\r\n\r\nexport default function TableScroll() {\r\n  const { stateCoinsC, isLoadingC } = useContext(stateCoinsContext);\r\n  const [stateValues] = stateCoinsC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setLoading({\r\n      load: false,\r\n    });\r\n  }, []);\r\n\r\n  const config = {\r\n    height: 60,\r\n    width: 80,\r\n    autoFit: false,\r\n    smooth: false,\r\n    passive: false,\r\n\r\n    lineStyle: {\r\n      stroke: \"blue\",\r\n      lineWidth: 1,\r\n      lineDash: [1, 1],\r\n      strokeOpacity: 0.7,\r\n      shadowColor: \"black\",\r\n      shadowBlur: 10,\r\n      shadowOffsetX: 5,\r\n      shadowOffsetY: 5,\r\n    },\r\n    tooltip: {\r\n      formatter: (data) => {\r\n        return data.y;\r\n      },\r\n    },\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Coin\",\r\n      dataIndex: [\"image\", \"name\"],\r\n      key: \"coin\",\r\n      fixed: \"left\",\r\n      width: 80,\r\n      align: \"center\",\r\n      render: (empty, record) => {\r\n        return {\r\n          children: (\r\n            <div style={{ display: \"flex\" }}>\r\n              <Avatar size=\"normal\" src={record.image} />\r\n              <span className=\"title\">{record.name}</span>\r\n              <div\r\n                style={{ position: \" absolute\", top: \"-35px\" }}\r\n                id={record.id}\r\n              ></div>\r\n            </div>\r\n          ),\r\n        };\r\n      },\r\n    },\r\n    {\r\n      dataIndex: \"symbol\",\r\n      key: \"symbol\",\r\n      width: 20,\r\n      align: \"center\",\r\n      render: (data) => {\r\n        return {\r\n          children: <span className=\"symbol\">{data.toUpperCase()}</span>,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"current_price\",\r\n      key: \"current_price\",\r\n      width: 80,\r\n      align: \"center\",\r\n      render: (price) => {\r\n        return {\r\n          children: <span>{formatPrice(price)}</span>,\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: \"1h\",\r\n      dataIndex: \"price_change_percentage_1h_in_currency\",\r\n      key: \"price_change_percentage_1h_in_currency\",\r\n      width: 30,\r\n      align: \"center\",\r\n      render: (percent) => (\r\n        <span className={`percent ${percent > 0 ? \"positive\" : \"negative\"}`}>\r\n          {formatPercentage(percent)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"24h\",\r\n      dataIndex: \"price_change_percentage_24h_in_currency\",\r\n      key: \"price_change_percentage_24h_in_currency\",\r\n      width: 30,\r\n      align: \"center\",\r\n      render: (percent) => (\r\n        <span className={`percent ${percent > 0 ? \"positive\" : \"negative\"}`}>\r\n          {formatPercentage(percent)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"7d\",\r\n      dataIndex: \"price_change_percentage_7d_in_currency\",\r\n      key: \"price_change_percentage_7d_in_currency\",\r\n      width: 30,\r\n      align: \"center\",\r\n      render: (percent) => (\r\n        <span className={`percent ${percent > 0 ? \"positive\" : \"negative\"}`}>\r\n          {formatPercentage(percent)}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Last 7 Days\",\r\n      dataIndex: \"sparkline_in_7d\",\r\n      key: \"sparkline_in_7d\",\r\n      align: \"center\",\r\n      width: 100,\r\n      height: 60,\r\n      render: ({ price }) => {\r\n        // const dataMod = price.map((price) => price.toFixed(4));\r\n        // <MiniChart dataSet={price}/>\r\n        return <TinyLine data={price} {...config} />;\r\n        // const sparklinePrices = sparkline.price.map((price, indx) => ({\r\n        //   day: Math.round(indx * 100 / sparkline.price.length),\r\n        //   value: Math.ceil(price),\r\n        // }));\r\n        // return <Line data={sparklinePrices} {...config} />;\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Table\r\n      onRow={(record) => {\r\n        return {\r\n          onClick: () => {\r\n            setLoading({\r\n              load: true,\r\n              tip: `Loading Coin!`,\r\n            });\r\n            setTimeout(() => {\r\n              history.push(`/coin/${record.id}`);\r\n            }, 10);\r\n          }, // click row\r\n        };\r\n      }}\r\n      pagination={false}\r\n      columns={columns}\r\n      dataSource={stateValues.coins}\r\n      rowKey={(record, indx) => `${record.id}${indx}`}\r\n      sticky={true}\r\n      scroll={{ x: \"max-content\" }}\r\n    />\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\helpers.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\coinsHomeListing.js",["94"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\CoinsHomeListing.js",["95","96","97","98","99"],"import \"../App.css\";\r\nimport React, { useEffect, useContext, useRef } from \"react\";\r\nimport { getCoins, getAllCoinsList } from \"../utils/api.js\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Spinner } from \"./loadingSpinner/Spinner\";\r\nimport { stateCoinsContext } from \"./App\";\r\nimport { CurrencyCard } from \"./CurrencyCard/CurrencyCard\";\r\nimport TableScroll from \"./TableScroll/TableScroll\";\r\n\r\nexport default function CoinsHomeListing(props) {\r\n  const {\r\n    moreItemsC,\r\n    numOfPagesC,\r\n    stateCoinsC,\r\n    isLoadingC,\r\n    scrollParentRefC,\r\n    selectedCoinC,\r\n    scrollPositionC,\r\n  } = useContext(stateCoinsContext);\r\n  const scrollParentRef = useRef(null);\r\n\r\n  const [selectedCoin] = selectedCoinC;\r\n  const [moreItems, setMoreItems] = moreItemsC;\r\n  const [numOfPages, setnumOfPages] = numOfPagesC;\r\n  const [stateValues, setStateValues] = stateCoinsC;\r\n  const [isLoading, setLoading] = isLoadingC;\r\n  const [scrollPosition, setScrollPosition] = scrollPositionC;\r\n  //\r\n  const tip = '';\r\n\r\n  useEffect(() => {\r\n    if (!numOfPages) {\r\n      getAllCoinsList().then((responseAllCoins) => {\r\n        setnumOfPages(Math.ceil(responseAllCoins.length / 250));\r\n      });\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    if (scrollPosition) {\r\n      document?.getElementById(scrollPosition)?.scrollIntoView();\r\n    }\r\n  }, [selectedCoin]);\r\n\r\n  const fetchData = () => {\r\n    if (isLoading.load || !moreItems || selectedCoin) return;\r\n    //\r\n    setLoading({\r\n      load: true,\r\n      tip: 'Fetching Coins...'\r\n    });\r\n    if (stateValues.page > numOfPages) {\r\n      setMoreItems(false);\r\n    }\r\n    getCoins(stateValues.page).then((responseCoins) => {\r\n      console.log(\"fetched\");\r\n\r\n      setStateValues((prevState) => {\r\n        return {\r\n          coins: prevState.coins\r\n            .concat(responseCoins)\r\n            .filter((val, id, array) => array.indexOf(val) === id),\r\n          page: prevState.page + 1,\r\n        };\r\n      });\r\n      setLoading(false);\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      ref={scrollParentRef}\r\n      style={{\r\n        minHeight: \"500px\",\r\n        maxHeight: \"70vh\",\r\n        overflowY: \"scroll\",\r\n      }}\r\n    >\r\n      {isLoading.load && <Spinner tip={isLoading.tip} />}\r\n\r\n      {numOfPages && (\r\n        <InfiniteScroll\r\n          loadMore={fetchData}\r\n          hasMore={moreItems}\r\n          getScrollParent={() => scrollParentRefC.current}\r\n          useWindow={false}\r\n        >\r\n          <TableScroll />\r\n          {/* <CurrencyCard coins={stateValues.coins} /> */}\r\n          {!moreItems && (\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>You have seen it all...</b>\r\n            </p>\r\n          )}\r\n        </InfiniteScroll>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\TagLinks.jsx",["100","101","102"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\Coin.jsx",["103","104","105"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinChart.jsx",["106"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\utils\\const.js",[],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinInfo.jsx",["107"],"C:\\dev\\react\\react-api-crypto-tracker-v1\\src\\components\\Coin\\CoinDataTable.jsx",["108","109","110","111","112","113","114"],{"ruleId":"115","severity":1,"message":"116","line":2,"column":50,"nodeType":"117","messageId":"118","endLine":2,"endColumn":59},{"ruleId":"115","severity":1,"message":"119","line":10,"column":26,"nodeType":"117","messageId":"118","endLine":10,"endColumn":32},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"115","severity":1,"message":"124","line":14,"column":10,"nodeType":"117","messageId":"118","endLine":14,"endColumn":22},{"ruleId":"115","severity":1,"message":"125","line":15,"column":21,"nodeType":"117","messageId":"118","endLine":15,"endColumn":31},{"ruleId":"120","replacedBy":"126"},{"ruleId":"122","replacedBy":"127"},{"ruleId":"115","severity":1,"message":"128","line":13,"column":10,"nodeType":"117","messageId":"118","endLine":13,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":20,"column":6,"nodeType":"131","endLine":20,"endColumn":8,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":38,"column":6,"nodeType":"131","endLine":38,"endColumn":8,"suggestions":"134"},{"ruleId":"115","severity":1,"message":"135","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":22},{"ruleId":"115","severity":1,"message":"136","line":27,"column":26,"nodeType":"117","messageId":"118","endLine":27,"endColumn":43},{"ruleId":"115","severity":1,"message":"137","line":29,"column":9,"nodeType":"117","messageId":"118","endLine":29,"endColumn":12},{"ruleId":"129","severity":1,"message":"138","line":38,"column":6,"nodeType":"131","endLine":38,"endColumn":8,"suggestions":"139"},{"ruleId":"129","severity":1,"message":"140","line":45,"column":6,"nodeType":"131","endLine":45,"endColumn":20,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":49,"column":9,"nodeType":"144","messageId":"145","endLine":49,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":134,"column":33,"nodeType":"148","messageId":"149","endLine":134,"endColumn":40},{"ruleId":"146","severity":1,"message":"147","line":147,"column":33,"nodeType":"148","messageId":"149","endLine":147,"endColumn":40},{"ruleId":"115","severity":1,"message":"150","line":26,"column":10,"nodeType":"117","messageId":"118","endLine":26,"endColumn":20},{"ruleId":"115","severity":1,"message":"151","line":27,"column":10,"nodeType":"117","messageId":"118","endLine":27,"endColumn":24},{"ruleId":"129","severity":1,"message":"152","line":45,"column":16,"nodeType":"153","endLine":45,"endColumn":56},{"ruleId":"115","severity":1,"message":"154","line":13,"column":24,"nodeType":"117","messageId":"118","endLine":13,"endColumn":39},{"ruleId":"115","severity":1,"message":"155","line":13,"column":9,"nodeType":"117","messageId":"118","endLine":13,"endColumn":20},{"ruleId":"115","severity":1,"message":"156","line":3,"column":27,"nodeType":"117","messageId":"118","endLine":3,"endColumn":37},{"ruleId":"115","severity":1,"message":"157","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":27},{"ruleId":"115","severity":1,"message":"158","line":5,"column":10,"nodeType":"117","messageId":"118","endLine":5,"endColumn":14},{"ruleId":"115","severity":1,"message":"159","line":6,"column":10,"nodeType":"117","messageId":"118","endLine":6,"endColumn":25},{"ruleId":"115","severity":1,"message":"160","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":21},{"ruleId":"161","severity":1,"message":"162","line":12,"column":3,"nodeType":"163","messageId":"164","endLine":25,"endColumn":4},{"ruleId":"129","severity":1,"message":"165","line":33,"column":6,"nodeType":"131","endLine":33,"endColumn":8,"suggestions":"166"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Footer' is assigned a value but never used.","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'selectedCoin' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["167"],["168"],"'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has missing dependencies: 'numOfPages', 'selectedCoin', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["170"],"'CurrencyCard' is defined but never used.","'setScrollPosition' is assigned a value but never used.","'tip' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'numOfPages', 'setLoading', and 'setnumOfPages'. Either include them or remove the dependency array.",["171"],"React Hook useEffect has missing dependencies: 'scrollPosition' and 'setLoading'. Either include them or remove the dependency array.",["172"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'searchText' is assigned a value but never used.","'scrollPosition' is assigned a value but never used.","Assignments to the 'urlSlice' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'setSelectedCoin' is assigned a value but never used.","'typePercent' is assigned a value but never used.","'useContext' is defined but never used.","'stateCoinsContext' is defined but never used.","'Line' is defined but never used.","'getSelectedCoin' is defined but never used.","'formatPrice' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'props.coinData'. Either include it or remove the dependency array. If 'setCoinDataTab' needs the current value of 'props.coinData', you can also switch to useReducer instead of useState and read 'props.coinData' in the reducer.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [setLoading]",{"range":"184","text":"185"},"Update the dependencies array to be: [numOfPages, selectedCoin, setLoading, setnumOfPages]",{"range":"186","text":"187"},"Update the dependencies array to be: [numOfPages, setLoading, setnumOfPages]",{"range":"188","text":"189"},"Update the dependencies array to be: [scrollPosition, selectedCoin, setLoading]",{"range":"190","text":"191"},"Update the dependencies array to be: [props.coinData]",{"range":"192","text":"193"},[642,644],"[setLoading]",[1168,1170],"[numOfPages, selectedCoin, setLoading, setnumOfPages]",[1240,1242],"[numOfPages, setLoading, setnumOfPages]",[1399,1413],"[scrollPosition, selectedCoin, setLoading]",[1136,1138],"[props.coinData]"]